{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bem-vindo ao microCI","text":"<p>A documenta\u00e7\u00e3o completa pode ser encontrada em microci.dev.</p> <p>O <code>microCI</code> \u00e9 uma ferramenta para auxiliar a constru\u00e7\u00e3o de pipelines de integra\u00e7\u00e3o cont\u00ednua.</p> <p>O principal diferencial do <code>microCI</code> \u00e9 a gera\u00e7\u00e3o de scripts port\u00e1veis e totalmente audit\u00e1veis para execu\u00e7\u00e3o de tarefas em containers docker.</p> <p>Como todos os passos s\u00e3o executados em um ou mais containers docker, todo o processo se torna reprodut\u00edvel em: a) qualquer m\u00e1quina do time de desenvolvimento, b) no servidor que realizar\u00e1 o build autom\u00e1tico ap\u00f3s os commits, c) no servidor que realizar\u00e1 o deploy para produ\u00e7\u00e3o... Enfim a mesma ferramenta, sem depend\u00eancia, pode ser usada tanto na m\u00e1quina do dev quanto no servidor.</p>"},{"location":"#no-desktop","title":"No desktop","text":"<p>A utiliza\u00e7\u00e3o do <code>microCI</code> no desktop do dev \u00e9 muito simples:</p> <pre><code>microCI | bash\n</code></pre> <p>No comando acima o <code>microCI</code> leu um arquivo <code>.microCI.yml</code> contendo a descri\u00e7\u00e3o dos passos da pipeline e gerou um script para execu\u00e7\u00e3o destes passos. Este script \u00e9 escrito na sa\u00edda padr\u00e3o e pode ser encadeado com outras ferramentas ou passado para um interpretador <code>bash</code> para a execu\u00e7\u00e3o.</p> <p>Um arquivo chamado <code>.microCI.log</code> \u00e9 gerado com todas as mensagens, warning, erros de todos os comandos executados e pode ser analisado para resolver algum problema que possa ocorrer.</p>"},{"location":"#no-servidor","title":"No servidor","text":"<p>Para execu\u00e7\u00e3o no servidor basta expor webhooks que, ao serem acionados, executam <code>microCI</code> nas respectivas pastas do projeto.</p>"},{"location":"#requisitos-minimos","title":"Requisitos m\u00ednimos","text":"<ul> <li>Um ambiente docker corretamente configurado</li> <li>Bash</li> </ul>"},{"location":"#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>A instala\u00e7\u00e3o \u00e9 igualmente simples, bastando copiar o execut\u00e1vel para uma pasta que esteja no <code>PATH</code>. Para remover o <code>microCI</code> completamente do sistema basta apagar o arquivo copiado para o PATH.</p> <pre><code>curl -fsSL https://github.com/geraldolsribeiro/microci/releases/latest/download/microCI \\\n-o /usr/local/bin/microCI\nchmod 755 /usr/local/bin/microCI\n</code></pre>"},{"location":"#container-docker","title":"Container docker","text":"<p>Voc\u00ea pode utilizar qualquer container docker para execu\u00e7\u00e3o, tanto os p\u00fablicos do Docker HUB quanto os que voc\u00ea desenvolver internamente.</p>"},{"location":"#integracao-com-github-gitlab","title":"Integra\u00e7\u00e3o com github, gitlab, ...","text":"<p>O modo mais simples e seguro de utilizar o <code>microCI</code> para ler ou escrever nos reposit\u00f3rios \u00e9 realizar o acesso atrav\u00e9s de chave SSH.</p>"},{"location":"#por-fazer","title":"Por fazer","text":"<p>Abaixo est\u00e3o algumas funcionalidades que poder\u00e3o estar presente nos pr\u00f3ximos releases.</p> <ul> <li>criar pacote deb</li> <li>criar pacote rpm</li> <li>passar usu\u00e1rio atual para container para evitar gera\u00e7\u00e3o de arquivos como   <code>root</code> na pasta de trabalho</li> <li>exibir mensagem de erro do passo que falhou</li> <li>substitui\u00e7\u00e3o de vari\u00e1veis nos steps</li> <li>uso de vari\u00e1veis de ambiente e segredos configurados no servidor</li> <li>criar imagem docker a partir de reposit\u00f3rio git</li> </ul>"},{"location":"#versoes","title":"Vers\u00f5es","text":"<ul> <li><code>0.27.0</code> Plugin <code>pandoc</code></li> <li><code>0.26.3</code> Update <code>clang-tidy</code></li> <li><code>0.26.0</code> Offline mode</li> <li><code>0.25.6</code> Plugin <code>git_publish</code> com escolha de branch (p.e. <code>gh-pages</code>)</li> <li><code>0.24.0</code> Plugin <code>docker_build</code></li> <li><code>0.23.0</code> Plugin <code>fetch</code> download github</li> <li><code>0.22.0</code> Plugin <code>fetch</code> download de pastas no github</li> <li><code>0.21.0</code> Plugin <code>flawfinder</code></li> <li><code>0.20.0</code> Imagem <code>intmain/microci_clang</code></li> <li><code>0.19.0</code> Documenta\u00e7\u00e3o com <code>intmain_docmd</code></li> <li><code>0.18.0</code> Plugin <code>minio</code></li> <li><code>0.17.0</code> Plugin <code>skip</code>; Status de execu\u00e7\u00e3o</li> <li><code>0.16.1</code> Refatora\u00e7\u00e3o dos plugins; Execu\u00e7\u00e3o default como n\u00e3o root</li> <li><code>0.15.2</code> Plugin <code>fetch</code> URL e pastas do gitlab</li> <li><code>0.14.1</code> Plugin <code>beamer</code></li> <li><code>0.13.0</code> Configura\u00e7\u00e3o de rede docker</li> <li><code>0.12.0</code> Plugins <code>clang-format</code> e <code>junit2html</code></li> <li><code>0.11.1</code> Notifica\u00e7\u00e3o em canal do discord</li> <li><code>0.10.1</code> M\u00faltiplos arquivos de modelo</li> <li><code>0.9.0</code> Plugin <code>plantuml</code></li> <li><code>0.8.0</code> Plugin <code>clang-tidy</code></li> <li><code>0.7.0</code> Plugin <code>cppcheck</code></li> <li><code>0.6.1</code> Plugin <code>git_publish</code></li> <li><code>0.5.0</code> Montagem de volumes; C\u00f3pia de chave SSH</li> <li><code>0.4.0</code> Constru\u00e7\u00e3o do microCI pelo microCI</li> <li><code>0.3.0</code> Cria arquivos de configura\u00e7\u00e3o</li> <li><code>0.2.0</code> Plugin <code>mkdocs</code></li> <li><code>0.1.0</code> Passo em <code>bash</code> e plugin <code>git_deploy</code></li> <li><code>0.0.1</code> Vers\u00e3o inicial para prova de conceito</li> </ul>"},{"location":"#licenca","title":"Licen\u00e7a","text":"<p>MIT License</p> <p>Copyright (c) 2022 Geraldo Luis da Silva Ribeiro</p> <pre><code>\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2588\u2580\u2591\u2591\u2591\n\u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2591\u2591\n\u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\n</code></pre> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"intmain_docmd/","title":"Intmain docmd","text":"<p>Fonte: <code>dockerfiles/intmain_docmd</code></p>"},{"location":"intmain_docmd/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Ferramenta para gera\u00e7\u00e3o de documenta\u00e7\u00e3o em formato markdown.</p>"},{"location":"intmain_docmd/#uso","title":"Uso","text":"<pre><code>intmain_docmd tipo arquivo_fonte arquivo_markdown\n</code></pre> <p>onde <code>tipo</code> pode ser:</p> <ul> <li><code>bash</code></li> <li><code>c++</code></li> <li><code>coffee</code></li> <li><code>conf</code></li> <li><code>grdb</code></li> <li><code>makefile</code></li> <li><code>nginx</code></li> <li><code>python</code></li> <li><code>ruby</code></li> <li><code>scss</code></li> <li><code>systemd</code></li> <li><code>vim</code></li> <li><code>yaml</code></li> </ul> <p>Se nenhum argumento for fornecido o programa imprime a ajuda e finaliza a execu\u00e7\u00e3o.</p> Detalhes <p> <pre><code>if ARGV.empty?\nputs \"\"\"\nGerador de documenta\u00e7\u00e3o em formato Markdown\nintmain_docmd tipo arquivo_fonte arquivo_markdown\ntipo: vim, bash, python, ruby, coffee, makefile, grdb, nginx, scss, conf, c++, systemd, yaml\nPara alterar o comportamento da ferramenta utilize as seguintes vari\u00e1veis de ambiente:\n  INTMAIN_DOCMD_DETAILS=false     desabilita a tag details\n  INTMAIN_DOCMD_TOC=false         desabilita a gera\u00e7\u00e3o de sum\u00e1rio\n  INTMAIN_DOCMD_SHOW_SOURCE=false desabilita a identifica\u00e7\u00e3o do arquivo fonte\n  \"\"\"\nexit\nend\n</code></pre> </p>"},{"location":"intmain_docmd/#exemplo-real","title":"Exemplo real","text":"<p>A documenta\u00e7\u00e3o deste projeto \u00e9 mantida utilizando-se o <code>intmain_docmd</code>:</p> <pre><code>intmain_docmd ruby     bin/intmain_docmd               doc/10_Gerador_de_documenta\u00e7\u00e3o_intmain_docmd.md\nintmain_docmd bash     bin/intmain_resize_screenshots  doc/20_Redimensionador_de_screenshots.md\nintmain_docmd bash     scripts/Common/intmain.bash     doc/20_Biblioteca_de_scripts_intmain.md\nintmain_docmd bash     scripts/Common/taoker.bash      doc/21_Biblioteca_de_scripts_taoker.md\nintmain_docmd bash     scripts/Common/common.bash      doc/30_Biblioteca_de_fun\u00e7\u00f5es_bash.md\nintmain_docmd makefile scripts/Common/Makefile.include doc/40_Biblioteca_de_alvos_make.md\n</code></pre>"},{"location":"intmain_docmd/#variaveis-de-controle","title":"Vari\u00e1veis de controle","text":"<ul> <li><code>INTMAIN_DOCMD_DETAILS</code>: ativa/desativa o encapsulamento dos trecho de c\u00f3digo</li> <li><code>INTMAIN_DOCMD_TOC</code>: ativa/desativa a gera\u00e7\u00e3o do \u00edndice</li> <li><code>INTMAIN_DOCMD_SHOW_SOURCE</code>: exibe o nome do arquivo de origem</li> </ul> Detalhes <p> <pre><code>use_detail  = ( ENV['INTMAIN_DOCMD_DETAILS']     || 'true' ).match( /(true|t|yes|y)/i )\nuse_toc     = ( ENV['INTMAIN_DOCMD_TOC']         || 'true' ).match( /(true|t|yes|y)/i )\nshow_source = ( ENV['INTMAIN_DOCMD_SHOW_SOURCE'] || 'true' ).match( /(true|t|yes|y)/i )\n</code></pre> </p>"},{"location":"intmain_docmd/#callout-numbers","title":"Callout numbers","text":"<p>Para referenciar comandos use itens numerados, p. e. \u2776, para indicar uma linha no meio do c\u00f3digo.</p> Detalhes <p> <pre><code>def expand_shortcuts(text)\ncallout_numbers = { \"\u2776\" =&gt; \"\u2776\", \"\u2777\" =&gt; \"\u2777\", \"\u2778\" =&gt; \"\u2778\",\n\"\u2779\" =&gt; \"\u2779\", \"\u277a\" =&gt; \"\u277a\", \"\u277b\" =&gt; \"\u277b\",\n\"\u277c\" =&gt; \"\u277c\", \"\u277d\" =&gt; \"\u277d\", \"\u277e\" =&gt; \"\u277e\",\n\"\u277f\" =&gt; \"\u277f\", \"\u24eb\" =&gt; \"\u24eb\", \"\u24ec\" =&gt; \"\u24ec\",\n\"\u24ed\" =&gt; \"\u24ed\", \"\u24ee\" =&gt; \"\u24ee\", \"\u24ef\" =&gt; \"\u24ef\",\n\"\u24f0\" =&gt; \"\u24f0\", \"\u24f1\" =&gt; \"\u24f1\", \"\u24f2\" =&gt; \"\u24f2\",\n\"\u24f3\" =&gt; \"\u24f3\", \"\u24f4\" =&gt; \"\u24f4\" }\ncallout_numbers.each{ |k,v| text = text.gsub( k, v ) }\ntext\nend\n</code></pre> </p>"},{"location":"intmain_docmd/#inclusao-de-diagramas-com-plantuml","title":"Inclus\u00e3o de diagramas com plantuml","text":"<p>Os trechos em <code>plantuml</code> a seguir ser\u00e3o substitu\u00eddos pela imagem do diagrama.</p> <p></p> <p></p> <p></p>"},{"location":"plugin_bash/","title":"Exemplo de uso do plugin bash","text":"<pre><code>steps:\n- name: \"Compilar vers\u00e3o est\u00e1tica do microCI\"\ndescription: \"Descri\u00e7\u00e3o deste passo\"\ndocker: \"gcc:11\" # Imagem que ser\u00e1 executada\nnetwork: bridge  # bridge, host ou none\nrun_as: root     # root, user\nenvs:\nENV1: \"valor da vari\u00e1vel de ambiente ENV1\"\nENV2: \"valor da vari\u00e1vel de ambiente ENV2\"\nplugin:\nname: bash\nbash: |\n# Coment\u00e1rios s\u00e3o permitidos entre os comando\napt update\napt upgrade -y\n# Estes pacotes s\u00e3o instalados na imagem\napt install -y xxd libspdlog-dev libyaml-cpp-dev\nmake -C src clean all\nmake -C test\n# Torna o usu\u00e1rio atual como dono do arquivo gerado\nchown $(id -u).$(id -g) -Rv src/microCI\n</code></pre>"},{"location":"plugin_beamer/","title":"Exemplo de uso do plugin beamer","text":"<pre><code>steps:\n- name: Criar apresenta\u00e7\u00e3o PDF a partir de arquivos Markdown\nplugin:\nname: beamer\noutput: nome_da_minha_apresentacao.pdf\nsource: # Lista de arquivos markdown na sequ\u00eancia em que ser\u00e3o utilizados\n- 00-intro.md\n- 01-outro.md\n- 02-mais-um.md\n- 99-referencias.md\nlang: pt-BR # en-US\ninstitute: Nome da institui\u00e7\u00e3o\ndate: 01 de Abril de 2023\ntitle: T\u00edtulo da apresenta\u00e7\u00e3o\nsubtitle: Subt\u00edtulo da apresenta\u00e7\u00e3o\nauthor:\n- Geraldo Ribeiro\n- Outro Nome de Autor\n# subject: Informa\u00e7\u00e3o da propriedade Assunto do PDF\n# keywords: [palavra-chave1, palavra-chave2, palavra-chave3, PDF]\n# slide-level: 2   # usa o t\u00edtulo de segundo n\u00edvel para iniciar um slide\n# aspectratio: 169 # Formato 16:9\n# links-as-notes: true\n# natbib: true\n# bibliography: refs.bib\n# theme: STR\nheader-includes:\n- \\usepackage{tikz}\n</code></pre>"},{"location":"plugin_clang-format/","title":"Exemplo de uso do plugin clang-format","text":"<pre><code>steps:\n- name: \"Formatar c\u00f3digo C++ com clang-format\"\ndescription: \"Padroniza formato do c\u00f3digo usando regras\"\nrun_as: user\nplugin:\nname: \"clang-format\"\nsource: # Lista arquivos a serem formatados\n- \"src/*.cpp\"\n- \"test/*.cpp\"\n- \"include/*.hpp\"\n</code></pre>"},{"location":"plugin_clang-format_config/","title":"Exemplo de configura\u00e7\u00e3o para o clang-format","text":"<pre><code>---\nBasedOnStyle: Google\nTabWidth: '2'\nUseTab: Never\nColumnLimit: 120\n...\n</code></pre>"},{"location":"plugin_clang-tidy/","title":"Exemplo de uso do plugin clang-tidy","text":"<pre><code>steps:\n- name: \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - clang-tidy\"\ndescription: \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\"\nplugin:\nname: \"clang-tidy\"\noptions:\n- \"-std=c++11\"\ninclude:\n- \"/usr/include/\"\nsource:\n- \"src/*.cpp\"\n- \"test/*.cpp\"\n</code></pre>"},{"location":"plugin_cppcheck/","title":"Exemplo de uso do plugin cppcheck","text":"<pre><code>steps:\n- name: \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - cppcheck\"\ndescription: \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\"\nplugin:\nname: \"cppcheck\"\noptions:\n# - \"-j 2\"             # executa 2 jobs simult\u00e2neamente\n# - \"--clang=clang-11\" # utiliza o clang como analisador\n# - \"--bug-hunting\"    # \u00fatil para code review\ninclude:\n- \"include\"\nsource:\n- \"src\"\n- \"test\"\nplatform: \"unix64\"\n</code></pre>"},{"location":"plugin_fetch/","title":"Exemplo de uso do plugin fetch","text":"<pre><code>---\nsteps:\n- name: \"Baixar arquivos externos ao projeto\"\ndescription: \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\"\nssh: # usado pelo git_archive\ncopy_from: \"${HOME}/.ssh\"\nplugin:\nname: \"fetch\"\ntarget: include # local padr\u00e3o para os arquivos\nitems:\n- git_archive: https://github.com/geraldolsribeiro/microCI.git\ntarget: /tmp/\ntag: master\nstrip-components: 1 # remove 1 n\u00edvel\nfiles:\n- test/help.txt # Arquivo final ser\u00e1 /tmp/help.txt\n- git_archive: https://github.com/User/repo/archive/master.tar.gz\ntarget: /tmp/\ntoken: personal_token\nfiles:\n- README.md\n- git_archive: https://github.com/User/repo/archive/master.tar.gz\noffline: /tmp/repo.tar.gz\ntarget: /tmp/\ntoken: personal_token\nfiles:\n- README.md\n- git_archive: git@gitlabcorp.xyz.com.br:group/repo.git\ntarget: /tmp/include/\nfiles:\n- README.md\n- include/*.h\n- git_archive: git@gitlabcorp.xyz.com.br:group/repo.git\ntarget: /tmp/lib/\nfiles:\n- lib/*.so\n- git_archive: git@gitlabcorp.xyz.com.br:group/repo.git\ntarget: /tmp/lib/\nstrip-components: 2 # remove 2 n\u00edveis\nfiles:\n- path1/path2/lib/*.so\n- url: https://raw.githubusercontent.com/adishavit/argh/master/argh.h\ntarget: /tmp/include # Local onde ser\u00e1 colocado este arquivo\n- url: https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp\n- url: https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp\n- github:   adishavit/argh    master   - github: adishavit/argh v1.3.2\ntarget: /tmp/\n- github: adishavit/argh v1.3.2\noffline: /tmp/repo2.tar.gz\n</code></pre>"},{"location":"plugin_fetch2/","title":"Exemplo de uso do plugin fetch (2)","text":"<pre><code>---\nsteps:\n- name: \"Baixar arquivos externos ao projeto\"\ndescription: \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\"\nssh: # usado pelo git_archive\ncopy_from: \"${HOME}/.ssh\"\ncopy_to: \"/home/bitnami/.ssh\"\nplugin:\nname: \"fetch\"\ntarget: include # local padr\u00e3o para os arquivos\nitems:\n- git_archive: git@gitlabcorp.xyz.com.br:group/repo.git\ntarget: /tmp/include/\nfiles:\n- README.md\n- include/*.h\n- git_archive: git@gitlabcorp.xyz.com.br:group/repo.git\ntarget: /tmp/lib/\nfiles:\n- lib/*.so\n- url: https://raw.githubusercontent.com/adishavit/argh/master/argh.h\ntarget: /tmp/include # Local onde ser\u00e1 colocado este arquivo\n- url: https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp\n- url: https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp\n</code></pre>"},{"location":"plugin_git_deploy/","title":"Exemplo de uso do plugin git_deploy","text":"<pre><code>---\nsteps:\n- name: \"Deploy de p\u00e1gina de aplica\u00e7\u00e3o VueJS\"\ndescription: \"Descri\u00e7\u00e3o do passo\"\nplugin:\nname: \"git_deploy\"\n# Reposit\u00f3rio contendo a \u00faltima vers\u00e3o da aplica\u00e7\u00e3o\nrepo: \"git@gitlab.xyx.com.br:str/app_frontend_deploy.git\"\n# Local no servidor onde ficar\u00e1 o reposit\u00f3rio git local\ngit_dir: \"/opt/microCI/repos/app_frontend_deploy\"\n# Local no servidor onde ser\u00e1 feito o deploy dos arquivos\nwork_tree: \"/var/www/my-intranet/html/app\"\nclean: true\n</code></pre>"},{"location":"plugin_git_publish/","title":"Exemplo de uso do plugin git_publish","text":"<pre><code>---\nsteps:\n- name: \"Publicar em outro reposit\u00f3rio git\"\ndescription: \"Descri\u00e7\u00e3o deste passo\"\n# network: bridge # (default)\n# run_as: root\n# run_as: user # (default)\nssh:\ncopy_from: \"${HOME}/.ssh\"\n# copy_to: \"/root/.ssh\"          # root\n# copy_to: \"/tmp/microci_deploy\" # user (default)\nplugin:\nname: \"git_publish\"\ngit_url: \"git@seuservidor.com.br:awesome_deploy.git\"\nbranch: \"gh-pages\"             # O branch padr\u00e3o \u00e9 o 'main'\ncopy_to: \"/tmp/microci_deploy\" # Pasta padr\u00e3o dentro do container\ncopy_from: \"site\"              # Pasta padr\u00e3o que cont\u00eam os arquivos\nclean_before: true             # Remove todos os arquivos antes de copiar o novos\n</code></pre>"},{"location":"plugin_minio/","title":"Exemplo de uso do plugin minio","text":"<p>Veja documenta\u00e7\u00e3o do MinIO Client em https://github.com/minio/mc.</p> <pre><code>steps:\n- name: \"Salvar artefato em bucket\"\ndescription: \"Descri\u00e7\u00e3o deste passo\"\nrun_as: user\nenvs:\nHOME: /tmp/\nplugin:\nname: minio\nbash: |\n# Lista arquivos do bucket\nmc ls microci/nome_do_bucket\n# Copia arquivos do workspace para o bucket\nmc cp Makefile microci/nome_do_bucket/\n# Copia arquivos do bucket para o workspace\nmc cp microci/nome_do_bucket/imagem.png .\n</code></pre>"},{"location":"plugin_mkdocs_material/","title":"Exemplo de uso do plugin mkdocs_material","text":"<pre><code>---\nsteps:\n- name: \"Construir documenta\u00e7\u00e3o em formato HTML\"\ndescription: \"Documenta\u00e7\u00e3o do projeto\"\nplugin:\nname: \"mkdocs_material\"\naction: \"build\"\n# Para construir a documenta\u00e7\u00e3o em outra pasta use\n# action: \"build --site-dir nome_da_pasta\n- name: \"Publicar HTML para reposit\u00f3rio git\"\nssh:\ncopy_from: \"${HOME}/.ssh\"\ncopy_to: \"/root/.ssh\"\nplugin:\nname: \"git_publish\"\ngit_url: \"ssh://git@someurl.com/site.git\"\ncopy_to: \"/deploy\" # Par\u00e2metro default\ncopy_from: \"site\"  # Par\u00e2metro default\nclean_before: true # Par\u00e2metro default\n- name: \"Servidor local na porta 8000 (Ctrl+C para finalizar)\"\ndescription: \"Executa servidor local para preview da documenta\u00e7\u00e3o\"\nonly: \"serve\" # passo executado localmente para auxiliar na edi\u00e7\u00e3o/preview\nnetwork: host\nplugin:\nname: \"mkdocs_material\"\naction: \"serve\"\nport: 8000\n</code></pre>"},{"location":"plugin_mkdocs_material_config/","title":"Exemplo de configura\u00e7\u00e3o do plugin mkdocs_material","text":"<pre><code>site_name: Nome do site\nrepo_url: https://github.com/geraldolsribeiro/microCI\nrepo_name: geraldolsribeiro/microCI\nedit_uri: edit/master/docs/\ntheme:\nname: material\nlanguage: pt\nlogo: images/logo.svg\nfavicon: images/favicon.png\npalette:\nprimary: white\nicon:\nrepo: fontawesome/brands/github\n# repo: fontawesome/brands/gitlab\nfeatures:\n- navigation.instant\nextra:\nhomepage: http://url-final-do-projeto/\nextra_css:\n- css/print.css\nmarkdown_extensions:\n- admonition\n- def_list\n# Para utilizar atributos nas imagens\n# ![WebCapture](/img/support/prod/screenshot-web-capture.png){: style=\"height:150px;width:150px\"}\n- attr_list\n- pymdownx.superfences:\ncustom_fences:\n- name: mermaid\nclass: mermaid\nformat: !!python/name:pymdownx.superfences.fence_code_format\n- pymdownx.tasklist:\ncustom_checkbox: true\n- pymdownx.emoji:\nemoji_index: !!python/name:materialx.emoji.twemoji\nemoji_generator: !!python/name:materialx.emoji.to_svg\n- pymdownx.highlight:\nanchor_linenums: true\n- pymdownx.inlinehilite\n- pymdownx.mark\n- pymdownx.snippets\nplugins:\n- search:\nlang: pt\n- mermaid2\n# - i18n:\ndefault_language: pt\n#     default_language: pt\nlanguages:\n#     languages:\nen:\n#       en:\nname: English\n#         name: English\nbuild: true\n#         build: true\nsite_name: microCI documentation\n#         site_name: microCI documentation\npt:\n#       pt:\nname: Portugu\u00eas\n#         name: Portugu\u00eas\nbuild: true\n#         build: true\nsite_name: Documenta\u00e7\u00e3o do microCI\n#         site_name: Documenta\u00e7\u00e3o do microCI\n</code></pre>"},{"location":"plugin_npm/","title":"Exemplo de uso do plugin bash para projeto node","text":"<pre><code>docker: \"node:16\"\nsteps:\n- name: \"Instalar depend\u00eancias\"\ndescription: \"Descri\u00e7\u00e3o do passo\"\nbash: |\nnpm install\n- name: \"Verificar o c\u00f3digo\"\nbash: |\nnpm run lint --fix\n- name: \"Construir\"\nbash: |\nnpm run build\n</code></pre>"},{"location":"plugin_pandoc/","title":"Exemplo de uso do plugin pandoc","text":"<pre><code>steps:\n- name: \"Gerar PDF a partir do Markdown\"\ndescription: \"Descri\u00e7\u00e3o deste passo\"\nplugin:\nname: pandoc\ninput:\n- README.md\noutput: README.pdf\n</code></pre>"},{"location":"plugin_plantuml/","title":"Exemplo de uso do plugin plantuml","text":"<pre><code>steps:\n- name: \"Gerar diagramas plantuml\"\ndescription: \"Descri\u00e7\u00e3o deste passo\"\nplugin:\nname: \"plantuml\"\nsource:\n- \"src/**.cpp\"                            # Vasculha recursivamente os arquivos cpp\n- \"docs/**.puml\"                          # Vasculha recursivamente os arquivos puml\ntype: svg                                   # svg, png ou pdf\noutput: \"/microci_workspace/docs/diagrams/\" # Pasta onde ser\u00e3o salvos os arquivos\nconfig: \"docs/diagrams/skinparams.iuml\"     # Estilos comuns\n</code></pre>"},{"location":"plugin_skip/","title":"Exemplo de uso do plugin skip","text":"<pre><code>steps:\n- name: \"Passo ignorado\"\ndescription: \"Este passo est\u00e1 desativado\"\nplugin:\nname: skip\n- name: \"Compilar vers\u00e3o est\u00e1tica do microCI\"\ndocker: \"gcc:11\"\nnetwork: bridge\nrun_as: root\nplugin:\nname: skip # Este passo n\u00e3o ser\u00e1 executado\nbash: |\napt update\napt upgrade -y\napt install -y xxd libspdlog-dev libyaml-cpp-dev\nmake -C src clean all\nmake -C test\n# Ajusta o dono do arquivo do root para o usu\u00e1rio atual\nchown $(id -u).$(id -g) -Rv src/microCI\n</code></pre>"},{"location":"tutorial/tutorial_mkdocs_material_local/","title":"Tutorial mkdocs local","text":""},{"location":"tutorial/tutorial_mkdocs_material_local/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>O objetivo deste tutorial \u00e9 a execu\u00e7\u00e3o do <code>microCI</code> localmente para criar documenta\u00e7\u00e3o.</p> <p>A ferramenta mkdocs-material oferece uma maneira pr\u00e1tica para documentar o projeto usando arquivos no formato markdown. Neste tutorial veremos como criar um projeto mkdocs e gerar uma documenta\u00e7\u00e3o usando o <code>microCI</code>.</p>"},{"location":"tutorial/tutorial_mkdocs_material_local/#configuracao-do-microci","title":"Configura\u00e7\u00e3o do microCI","text":"<p>O <code>microCI</code> cria um arquivo de configura\u00e7\u00e3o inicial para executar  o <code>mkdocs-material</code>:</p> <pre><code>microCI --new mkdocs_material\n</code></pre> <p></p> <p>Um arquivo chamado <code>.microCI.yml</code> foi criado no diret\u00f3rio atual:</p> <pre><code>---\nsteps:\n# Remova este passo ap\u00f3s a primeira execu\u00e7\u00e3o\n- name: \"Criar arquivos iniciais do mkdocs\"\nplugin:\nname: \"mkdocs_material\"\naction: \"new .\"\n- name: \"Construir documenta\u00e7\u00e3o em formato HTML\"\ndescription: \"Documenta\u00e7\u00e3o do projeto\"\nplugin:\nname: \"mkdocs_material\"\naction: \"build\"\n# Contruindo para uma pasta personalizada\n# action: \"build --site-dir public\n- name: \"Servidor local na porta 8000 (Ctrl+C para finalizar)\"\ndescription: \"Executa servidor local para preview da documenta\u00e7\u00e3o\"\n# passo executado localmente\nonly: \"local-step\"\nplugin:\nname: \"mkdocs_material\"\naction: \"serve\"\n# Porta personalizada, caso j\u00e1 esteja utilizando a padr\u00e3o 8000\n# port: 9001\n</code></pre> <p>Cada chave <code>name</code> inicia um novo passo. No arquivo criado existem 3 passos:</p> <ul> <li><code>Criar arquivos iniciais do mkdocs</code></li> <li><code>Construir documenta\u00e7\u00e3o em formato HTML</code></li> <li><code>Servidor local na porta 8000</code></li> </ul> <p>Passos com a chave <code>only</code> n\u00e3o s\u00e3o executados por padr\u00e3o.</p>"},{"location":"tutorial/tutorial_mkdocs_material_local/#primeira-execucao","title":"Primeira execu\u00e7\u00e3o","text":"<p>Edite o arquivo <code>.microCI.yml</code> para ajustar a configura\u00e7\u00e3o se necess\u00e1rio e execute:</p> <pre><code>microCI | bash\n</code></pre> <p>Se a gera\u00e7\u00e3o foi bem sucedida o nome dos passos seguidos de <code>OK</code> s\u00e3o exibidos no terminal:</p> <pre><code>Criar arquivos iniciais do mkdocs...............: OK\nConstruir documenta\u00e7\u00e3o em formato HTML..........: OK\n</code></pre> <p></p> <p>Remova o primeiro passo (Criar arquivos iniciais do mkdocs) e execute o comando novamente:</p> <pre><code>microCI | bash\n</code></pre> <p></p>"},{"location":"tutorial/tutorial_mkdocs_material_local/#passos-adicionais","title":"Passos adicionais","text":"<p>A configura\u00e7\u00e3o contem um passo que pode ser executado sozinho para subir um servidor para previsualizar a documenta\u00e7\u00e3o.</p> <pre><code>microCI --only local-step | bash\n</code></pre> <p></p>"},{"location":"tutorial/tutorial_mkdocs_material_servidor/","title":"Tutorial mkdocs servidor","text":""},{"location":"tutorial/tutorial_mkdocs_material_servidor/#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Depois de executar o <code>microCI</code> localmente no tutorial anterrior, podemos come\u00e7ar a automa\u00e7\u00e3o da pipeline atrav\u00e9s de webhooks e execu\u00e7\u00e3o remota.</p> <p>Neste tutorial ser\u00e1 mostrado como, a partir de um <code>commit</code> no reposit\u00f3rio de trabalho, \u00e9 gerada a vers\u00e3o final e disponibiliza\u00e7\u00e3o em produ\u00e7\u00e3o. </p> <p>A execu\u00e7\u00e3o se dar\u00e1 conforme a figura abaixo:</p> <p></p> <p>Evento inicial: O desenvolvedor atualiza a documenta\u00e7\u00e3o realiza um <code>commit</code> e envia para o servidor git.</p> <p>Passo 1: O servidor git recebe o evento de <code>push</code> com os <code>commits</code> do usu\u00e1rio e dispara um webhook vinculado ao reposit\u00f3rio.</p> <p>Nota: o evento de <code>push</code> ocorre uma \u00fanica vez mesmo que este contenha v\u00e1rios <code>commits</code>.</p> <p>Passo 2: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo <code>commit</code> e executa um script vinculado ao webhook.</p> <p>Nota: o servidor de <code>webhook</code> utilizado neste exemplo pode ser obtido em https://github.com/adnanh/webhook.</p> <p>Abaixo est\u00e3o a declara\u00e7\u00e3o dois webhooks usados neste tutorial:</p> <pre><code># Disparado no passo 2\n- id: \"microCI_awesome\"\nexecute-command: \"/usr/local/bin/microCI.sh\"\ncommand-working-directory: \"/opt/microCI/repos/awesome/\"\n# Disparado no passo 5\n- id: \"microCI_awesome_deploy\"\nexecute-command: \"/usr/local/bin/microCI.sh\"\ncommand-working-directory: \"/opt/microCI/repos/awesome_deploy/\"\n</code></pre> <p>Nota: todos os webhooks executam o mesmo script</p> <p>Passo 3: Uma implementa\u00e7\u00e3o m\u00ednima do script de adapta\u00e7\u00e3o do webhook para o microCI  pode ser vista a seguir:</p> <pre><code>#!/bin/bash\n# Arquivo microCI.sh\n# Acrescente suas personaliza\u00e7\u00f5es aqui\nif [ -d \".git\" ]; then\ngit pull\nfi\n# Este comando \u00e9 executado no caminho do reposit\u00f3rio\nmicroCI | bash\n</code></pre> <p>Nota: O procedimento \u00e9 id\u00eantico ao executado localmente: o <code>microCI</code> l\u00ea a configura\u00e7\u00e3o do arquivo <code>.microCI.yml</code> e executa os passos descritos.</p> <pre><code># Arquivo .microCI.yml do reposit\u00f3rio awesome\n---\nsteps:\n- name: \"Construir documenta\u00e7\u00e3o em formato HTML\"\ndescription: \"Documenta\u00e7\u00e3o do projeto\"\nplugin:\nname: \"mkdocs_material\"\naction: \"build\"\n- name: \"Publicar HTML para reposit\u00f3rio git\"\nssh:\ncopy_from: \"${HOME}/.ssh\"\ncopy_to: \"/root/.ssh\"\nplugin:\nname: \"git_publish\"\ngit_url: \"git@nome_do_servidor.com.br:awesome_deploy.git\"\ncopy_to: \"/deploy\"\ncopy_from: \"site\"\nclean_before: true\n</code></pre> <p>O plugin <code>mkdocs_material</code> com a a\u00e7\u00e3o <code>build</code> l\u00ea os arquivos markdown e constroi a documenta\u00e7\u00e3o em formato HTML e a salva na pasta <code>site</code> para ser utilizada no pr\u00f3ximo passo.</p> <p>O plugin <code>git_publish</code> clona o reposit\u00f3rio apontado por <code>git_url</code> na pasta <code>/deploy</code>, ent\u00e3o copia o conte\u00fado da pasta <code>site</code> para a pasta <code>/deploy</code>, dentro do container, e faz o <code>commit</code> para atualizando o repost\u00f3rio.</p> <p>Passo 4: O reposit\u00f3rio <code>awesome_deploy</code> recebe o <code>post</code> lan\u00e7ado pelo plugin <code>git_publish</code> no passo anterior e dispara outro webhook.</p> <p>Passo 5: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo <code>commit</code> e executa um script vinculado ao webhook.</p> <pre><code># Disparado no passo 5\n- id: \"microCI_awesome_deploy\"\nexecute-command: \"/usr/local/bin/microCI.sh\"\ncommand-working-directory: \"/opt/microCI/repos/awesome_deploy/\"\n</code></pre> <p>Nota: executa o procedimento igual ao do passo 2, mas desta vez na pasta do reposit\u00f3rio <code>awesome_deploy</code>.</p> <p>Passo 6: O <code>microCI</code> executa o plugin <code>git_deploy</code> que realiza o <code>checkout</code> do reposit\u00f3rio na pasta de implanta\u00e7\u00e3o. Para garantir que o hist\u00f3rico com os commits antigos n\u00e3o estar\u00e3o dispon\u00edveis em produ\u00e7\u00e3o o checkout \u00e9 realizado de forma dividida, ficando o hist\u00f3rico (<code>.git</code>) em uma pasta privada e somente os arquivos do \u00faltimo <code>commit</code> no caminho de <code>deploy</code> especificado.</p> <p>Passo 7: A pasta de <code>deploy</code> atualizada no passo anterior est\u00e1 dispon\u00edvel em produ\u00e7\u00e3o.</p>"}]}