{"config":{"indexing":"full","lang":["pt","en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Bem-vindo ao microCI A documenta\u00e7\u00e3o completa pode ser encontrada em microci.dev . O microCI \u00e9 uma ferramenta para auxiliar a constru\u00e7\u00e3o de pipelines de integra\u00e7\u00e3o cont\u00ednua. O principal diferencial do microCI \u00e9 a gera\u00e7\u00e3o de scripts port\u00e1veis e totalmente audit\u00e1veis para execu\u00e7\u00e3o de tarefas em containers docker . Como todos os passos s\u00e3o executados em um ou mais containers docker, todo o processo se torna reprodut\u00edvel em: a) qualquer m\u00e1quina do time de desenvolvimento, b) no servidor que realizar\u00e1 o build autom\u00e1tico ap\u00f3s os commits, c) no servidor que realizar\u00e1 o deploy para produ\u00e7\u00e3o... Enfim a mesma ferramenta, sem depend\u00eancia, pode ser usada tanto na m\u00e1quina do dev quanto no servidor. No desktop A utiliza\u00e7\u00e3o do microCI no desktop do dev \u00e9 muito simples: microCI | bash No comando acima o microCI leu um arquivo .microCI.yml contendo a descri\u00e7\u00e3o dos passos da pipeline e gerou um script para execu\u00e7\u00e3o destes passos. Este script \u00e9 escrito na sa\u00edda padr\u00e3o e pode ser encadeado com outras ferramentas ou passado para um interpretador bash para a execu\u00e7\u00e3o. Um arquivo chamado .microCI.log \u00e9 gerado com todas as mensagens, warning, erros de todos os comandos executados e pode ser analisado para resolver algum problema que possa ocorrer. No servidor Para execu\u00e7\u00e3o no servidor basta expor webhooks que, ao serem acionados, executam microCI nas respectivas pastas do projeto. Requisitos m\u00ednimos Um ambiente docker corretamente configurado Bash Instala\u00e7\u00e3o A instala\u00e7\u00e3o \u00e9 igualmente simples, bastando copiar o execut\u00e1vel para uma pasta que esteja no PATH . Para remover o microCI completamente do sistema basta apagar o arquivo copiado para o PATH. curl -fsSL https://github.com/geraldolsribeiro/microci/releases/latest/download/microCI \\ -o /usr/local/bin/microCI chmod 755 /usr/local/bin/microCI Container docker Voc\u00ea pode utilizar qualquer container docker para execu\u00e7\u00e3o, tanto os p\u00fablicos do Docker HUB quanto os que voc\u00ea desenvolver internamente. Integra\u00e7\u00e3o com github, gitlab, ... O modo mais simples e seguro de utilizar o microCI para ler ou escrever nos reposit\u00f3rios \u00e9 realizar o acesso atrav\u00e9s de chave SSH. Por fazer Abaixo est\u00e3o algumas funcionalidades que poder\u00e3o estar presente nos pr\u00f3ximos releases. criar pacote deb criar pacote rpm passar usu\u00e1rio atual para container para evitar gera\u00e7\u00e3o de arquivos como root na pasta de trabalho exibir mensagem de erro do passo que falhou substitui\u00e7\u00e3o de vari\u00e1veis nos steps uso de vari\u00e1veis de ambiente e segredos configurados no servidor criar imagem docker a partir de reposit\u00f3rio git Vers\u00f5es 0.23.0 Plugin fetch download github 0.22.0 Plugin fetch download de pastas no github 0.21.0 Plugin flawfinder 0.20.0 Imagem intmain/microci_clang 0.19.0 Documenta\u00e7\u00e3o com intmain_docmd 0.18.0 Plugin minio 0.17.0 Plugin skip ; Status de execu\u00e7\u00e3o 0.16.1 Refatora\u00e7\u00e3o dos plugins; Execu\u00e7\u00e3o default como n\u00e3o root 0.15.2 Plugin fetch URL e pastas do gitlab 0.14.1 Plugin beamer 0.13.0 Configura\u00e7\u00e3o de rede docker 0.12.0 Plugins clang-format e junit2html 0.11.1 Notifica\u00e7\u00e3o em canal do discord 0.10.1 M\u00faltiplos arquivos de modelo 0.9.0 Plugin plantuml 0.8.0 Plugin clang-tidy 0.7.0 Plugin cppcheck 0.6.1 Plugin git_publish 0.5.0 Montagem de volumes; C\u00f3pia de chave SSH 0.4.0 Constru\u00e7\u00e3o do microCI pelo microCI 0.3.0 Cria arquivos de configura\u00e7\u00e3o 0.2.0 Plugin mkdocs 0.1.0 Passo em bash e plugin git_deploy 0.0.1 Vers\u00e3o inicial para prova de conceito Licen\u00e7a MIT License Copyright (c) 2022 Geraldo Luis da Silva Ribeiro \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2588\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Bem-vindo ao microCI"},{"location":"#bem-vindo-ao-microci","text":"A documenta\u00e7\u00e3o completa pode ser encontrada em microci.dev . O microCI \u00e9 uma ferramenta para auxiliar a constru\u00e7\u00e3o de pipelines de integra\u00e7\u00e3o cont\u00ednua. O principal diferencial do microCI \u00e9 a gera\u00e7\u00e3o de scripts port\u00e1veis e totalmente audit\u00e1veis para execu\u00e7\u00e3o de tarefas em containers docker . Como todos os passos s\u00e3o executados em um ou mais containers docker, todo o processo se torna reprodut\u00edvel em: a) qualquer m\u00e1quina do time de desenvolvimento, b) no servidor que realizar\u00e1 o build autom\u00e1tico ap\u00f3s os commits, c) no servidor que realizar\u00e1 o deploy para produ\u00e7\u00e3o... Enfim a mesma ferramenta, sem depend\u00eancia, pode ser usada tanto na m\u00e1quina do dev quanto no servidor.","title":"Bem-vindo ao microCI"},{"location":"#no-desktop","text":"A utiliza\u00e7\u00e3o do microCI no desktop do dev \u00e9 muito simples: microCI | bash No comando acima o microCI leu um arquivo .microCI.yml contendo a descri\u00e7\u00e3o dos passos da pipeline e gerou um script para execu\u00e7\u00e3o destes passos. Este script \u00e9 escrito na sa\u00edda padr\u00e3o e pode ser encadeado com outras ferramentas ou passado para um interpretador bash para a execu\u00e7\u00e3o. Um arquivo chamado .microCI.log \u00e9 gerado com todas as mensagens, warning, erros de todos os comandos executados e pode ser analisado para resolver algum problema que possa ocorrer.","title":"No desktop"},{"location":"#no-servidor","text":"Para execu\u00e7\u00e3o no servidor basta expor webhooks que, ao serem acionados, executam microCI nas respectivas pastas do projeto.","title":"No servidor"},{"location":"#requisitos-minimos","text":"Um ambiente docker corretamente configurado Bash","title":"Requisitos m\u00ednimos"},{"location":"#instalacao","text":"A instala\u00e7\u00e3o \u00e9 igualmente simples, bastando copiar o execut\u00e1vel para uma pasta que esteja no PATH . Para remover o microCI completamente do sistema basta apagar o arquivo copiado para o PATH. curl -fsSL https://github.com/geraldolsribeiro/microci/releases/latest/download/microCI \\ -o /usr/local/bin/microCI chmod 755 /usr/local/bin/microCI","title":"Instala\u00e7\u00e3o"},{"location":"#container-docker","text":"Voc\u00ea pode utilizar qualquer container docker para execu\u00e7\u00e3o, tanto os p\u00fablicos do Docker HUB quanto os que voc\u00ea desenvolver internamente.","title":"Container docker"},{"location":"#integracao-com-github-gitlab","text":"O modo mais simples e seguro de utilizar o microCI para ler ou escrever nos reposit\u00f3rios \u00e9 realizar o acesso atrav\u00e9s de chave SSH.","title":"Integra\u00e7\u00e3o com github, gitlab, ..."},{"location":"#por-fazer","text":"Abaixo est\u00e3o algumas funcionalidades que poder\u00e3o estar presente nos pr\u00f3ximos releases. criar pacote deb criar pacote rpm passar usu\u00e1rio atual para container para evitar gera\u00e7\u00e3o de arquivos como root na pasta de trabalho exibir mensagem de erro do passo que falhou substitui\u00e7\u00e3o de vari\u00e1veis nos steps uso de vari\u00e1veis de ambiente e segredos configurados no servidor criar imagem docker a partir de reposit\u00f3rio git","title":"Por fazer"},{"location":"#versoes","text":"0.23.0 Plugin fetch download github 0.22.0 Plugin fetch download de pastas no github 0.21.0 Plugin flawfinder 0.20.0 Imagem intmain/microci_clang 0.19.0 Documenta\u00e7\u00e3o com intmain_docmd 0.18.0 Plugin minio 0.17.0 Plugin skip ; Status de execu\u00e7\u00e3o 0.16.1 Refatora\u00e7\u00e3o dos plugins; Execu\u00e7\u00e3o default como n\u00e3o root 0.15.2 Plugin fetch URL e pastas do gitlab 0.14.1 Plugin beamer 0.13.0 Configura\u00e7\u00e3o de rede docker 0.12.0 Plugins clang-format e junit2html 0.11.1 Notifica\u00e7\u00e3o em canal do discord 0.10.1 M\u00faltiplos arquivos de modelo 0.9.0 Plugin plantuml 0.8.0 Plugin clang-tidy 0.7.0 Plugin cppcheck 0.6.1 Plugin git_publish 0.5.0 Montagem de volumes; C\u00f3pia de chave SSH 0.4.0 Constru\u00e7\u00e3o do microCI pelo microCI 0.3.0 Cria arquivos de configura\u00e7\u00e3o 0.2.0 Plugin mkdocs 0.1.0 Passo em bash e plugin git_deploy 0.0.1 Vers\u00e3o inicial para prova de conceito","title":"Vers\u00f5es"},{"location":"#licenca","text":"MIT License Copyright (c) 2022 Geraldo Luis da Silva Ribeiro \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2588\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licen\u00e7a"},{"location":"intmain_docmd/","text":"Fonte: dockerfiles/intmain_docmd Introdu\u00e7\u00e3o Ferramenta para gera\u00e7\u00e3o de documenta\u00e7\u00e3o em formato markdown. Uso intmain_docmd tipo arquivo_fonte arquivo_markdown onde tipo pode ser: bash c++ coffee conf grdb makefile nginx python ruby scss systemd vim yaml Se nenhum argumento for fornecido o programa imprime a ajuda e finaliza a execu\u00e7\u00e3o. Detalhes if ARGV . empty? puts \"\"\" Gerador de documenta\u00e7\u00e3o em formato Markdown intmain_docmd tipo arquivo_fonte arquivo_markdown tipo: vim, bash, python, ruby, coffee, makefile, grdb, nginx, scss, conf, c++, systemd, yaml Para alterar o comportamento da ferramenta utilize as seguintes vari\u00e1veis de ambiente: INTMAIN_DOCMD_DETAILS=false desabilita a tag details INTMAIN_DOCMD_TOC=false desabilita a gera\u00e7\u00e3o de sum\u00e1rio INTMAIN_DOCMD_SHOW_SOURCE=false desabilita a identifica\u00e7\u00e3o do arquivo fonte \"\"\" exit end Exemplo real A documenta\u00e7\u00e3o deste projeto \u00e9 mantida utilizando-se o intmain_docmd : intmain_docmd ruby bin/intmain_docmd doc/10_Gerador_de_documenta\u00e7\u00e3o_intmain_docmd.md intmain_docmd bash bin/intmain_resize_screenshots doc/20_Redimensionador_de_screenshots.md intmain_docmd bash scripts/Common/intmain.bash doc/20_Biblioteca_de_scripts_intmain.md intmain_docmd bash scripts/Common/taoker.bash doc/21_Biblioteca_de_scripts_taoker.md intmain_docmd bash scripts/Common/common.bash doc/30_Biblioteca_de_fun\u00e7\u00f5es_bash.md intmain_docmd makefile scripts/Common/Makefile.include doc/40_Biblioteca_de_alvos_make.md Vari\u00e1veis de controle INTMAIN_DOCMD_DETAILS : ativa/desativa o encapsulamento dos trecho de c\u00f3digo INTMAIN_DOCMD_TOC : ativa/desativa a gera\u00e7\u00e3o do \u00edndice INTMAIN_DOCMD_SHOW_SOURCE : exibe o nome do arquivo de origem Detalhes use_detail = ( ENV [ 'INTMAIN_DOCMD_DETAILS' ] || 'true' ) . match ( /(true|t|yes|y)/i ) use_toc = ( ENV [ 'INTMAIN_DOCMD_TOC' ] || 'true' ) . match ( /(true|t|yes|y)/i ) show_source = ( ENV [ 'INTMAIN_DOCMD_SHOW_SOURCE' ] || 'true' ) . match ( /(true|t|yes|y)/i ) Callout numbers Para referenciar comandos use itens numerados, p. e. \u2776, para indicar uma linha no meio do c\u00f3digo. Detalhes def expand_shortcuts ( text ) callout_numbers = { \"\u2776\" => \"\u2776\" , \"\u2777\" => \"\u2777\" , \"\u2778\" => \"\u2778\" , \"\u2779\" => \"\u2779\" , \"\u277a\" => \"\u277a\" , \"\u277b\" => \"\u277b\" , \"\u277c\" => \"\u277c\" , \"\u277d\" => \"\u277d\" , \"\u277e\" => \"\u277e\" , \"\u277f\" => \"\u277f\" , \"\u24eb\" => \"\u24eb\" , \"\u24ec\" => \"\u24ec\" , \"\u24ed\" => \"\u24ed\" , \"\u24ee\" => \"\u24ee\" , \"\u24ef\" => \"\u24ef\" , \"\u24f0\" => \"\u24f0\" , \"\u24f1\" => \"\u24f1\" , \"\u24f2\" => \"\u24f2\" , \"\u24f3\" => \"\u24f3\" , \"\u24f4\" => \"\u24f4\" } callout_numbers . each { | k , v | text = text . gsub ( k , v ) } text end Inclus\u00e3o de diagramas com plantuml Os trechos em plantuml a seguir ser\u00e3o substitu\u00eddos pela imagem do diagrama.","title":"Intmain docmd"},{"location":"intmain_docmd/#introducao","text":"Ferramenta para gera\u00e7\u00e3o de documenta\u00e7\u00e3o em formato markdown.","title":"Introdu\u00e7\u00e3o"},{"location":"intmain_docmd/#uso","text":"intmain_docmd tipo arquivo_fonte arquivo_markdown onde tipo pode ser: bash c++ coffee conf grdb makefile nginx python ruby scss systemd vim yaml Se nenhum argumento for fornecido o programa imprime a ajuda e finaliza a execu\u00e7\u00e3o. Detalhes if ARGV . empty? puts \"\"\" Gerador de documenta\u00e7\u00e3o em formato Markdown intmain_docmd tipo arquivo_fonte arquivo_markdown tipo: vim, bash, python, ruby, coffee, makefile, grdb, nginx, scss, conf, c++, systemd, yaml Para alterar o comportamento da ferramenta utilize as seguintes vari\u00e1veis de ambiente: INTMAIN_DOCMD_DETAILS=false desabilita a tag details INTMAIN_DOCMD_TOC=false desabilita a gera\u00e7\u00e3o de sum\u00e1rio INTMAIN_DOCMD_SHOW_SOURCE=false desabilita a identifica\u00e7\u00e3o do arquivo fonte \"\"\" exit end","title":"Uso"},{"location":"intmain_docmd/#exemplo-real","text":"A documenta\u00e7\u00e3o deste projeto \u00e9 mantida utilizando-se o intmain_docmd : intmain_docmd ruby bin/intmain_docmd doc/10_Gerador_de_documenta\u00e7\u00e3o_intmain_docmd.md intmain_docmd bash bin/intmain_resize_screenshots doc/20_Redimensionador_de_screenshots.md intmain_docmd bash scripts/Common/intmain.bash doc/20_Biblioteca_de_scripts_intmain.md intmain_docmd bash scripts/Common/taoker.bash doc/21_Biblioteca_de_scripts_taoker.md intmain_docmd bash scripts/Common/common.bash doc/30_Biblioteca_de_fun\u00e7\u00f5es_bash.md intmain_docmd makefile scripts/Common/Makefile.include doc/40_Biblioteca_de_alvos_make.md","title":"Exemplo real"},{"location":"intmain_docmd/#variaveis-de-controle","text":"INTMAIN_DOCMD_DETAILS : ativa/desativa o encapsulamento dos trecho de c\u00f3digo INTMAIN_DOCMD_TOC : ativa/desativa a gera\u00e7\u00e3o do \u00edndice INTMAIN_DOCMD_SHOW_SOURCE : exibe o nome do arquivo de origem Detalhes use_detail = ( ENV [ 'INTMAIN_DOCMD_DETAILS' ] || 'true' ) . match ( /(true|t|yes|y)/i ) use_toc = ( ENV [ 'INTMAIN_DOCMD_TOC' ] || 'true' ) . match ( /(true|t|yes|y)/i ) show_source = ( ENV [ 'INTMAIN_DOCMD_SHOW_SOURCE' ] || 'true' ) . match ( /(true|t|yes|y)/i )","title":"Vari\u00e1veis de controle"},{"location":"intmain_docmd/#callout-numbers","text":"Para referenciar comandos use itens numerados, p. e. \u2776, para indicar uma linha no meio do c\u00f3digo. Detalhes def expand_shortcuts ( text ) callout_numbers = { \"\u2776\" => \"\u2776\" , \"\u2777\" => \"\u2777\" , \"\u2778\" => \"\u2778\" , \"\u2779\" => \"\u2779\" , \"\u277a\" => \"\u277a\" , \"\u277b\" => \"\u277b\" , \"\u277c\" => \"\u277c\" , \"\u277d\" => \"\u277d\" , \"\u277e\" => \"\u277e\" , \"\u277f\" => \"\u277f\" , \"\u24eb\" => \"\u24eb\" , \"\u24ec\" => \"\u24ec\" , \"\u24ed\" => \"\u24ed\" , \"\u24ee\" => \"\u24ee\" , \"\u24ef\" => \"\u24ef\" , \"\u24f0\" => \"\u24f0\" , \"\u24f1\" => \"\u24f1\" , \"\u24f2\" => \"\u24f2\" , \"\u24f3\" => \"\u24f3\" , \"\u24f4\" => \"\u24f4\" } callout_numbers . each { | k , v | text = text . gsub ( k , v ) } text end","title":"Callout numbers"},{"location":"intmain_docmd/#inclusao-de-diagramas-com-plantuml","text":"Os trechos em plantuml a seguir ser\u00e3o substitu\u00eddos pela imagem do diagrama.","title":"Inclus\u00e3o de diagramas com plantuml"},{"location":"plugin_bash/","text":"Exemplo de uso do plugin bash steps : - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" description : \"Descri\u00e7\u00e3o deste passo\" docker : \"gcc:11\" # Imagem que ser\u00e1 executada network : bridge # bridge, host ou none run_as : root # root, user plugin : name : bash bash : | # Coment\u00e1rios s\u00e3o permitidos entre os comando apt update apt upgrade -y # Estes pacotes s\u00e3o instalados na imagem apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Torna o usu\u00e1rio atual como dono do arquivo gerado chown $(id -u).$(id -g) -Rv src/microCI","title":"Plugin bash"},{"location":"plugin_bash/#exemplo-de-uso-do-plugin-bash","text":"steps : - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" description : \"Descri\u00e7\u00e3o deste passo\" docker : \"gcc:11\" # Imagem que ser\u00e1 executada network : bridge # bridge, host ou none run_as : root # root, user plugin : name : bash bash : | # Coment\u00e1rios s\u00e3o permitidos entre os comando apt update apt upgrade -y # Estes pacotes s\u00e3o instalados na imagem apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Torna o usu\u00e1rio atual como dono do arquivo gerado chown $(id -u).$(id -g) -Rv src/microCI","title":"Exemplo de uso do plugin bash"},{"location":"plugin_beamer/","text":"Exemplo de uso do plugin beamer steps : - name : Criar apresenta\u00e7\u00e3o PDF a partir de arquivos Markdown plugin : name : beamer output : nome_da_minha_apresentacao.pdf source : # Lista de arquivos markdown na sequ\u00eancia em que ser\u00e3o utilizados - 00-intro.md - 01-outro.md - 02-mais-um.md - 99-referencias.md lang : pt-BR # en-US institute : Nome da institui\u00e7\u00e3o date : 01 de Abril de 2023 title : T\u00edtulo da apresenta\u00e7\u00e3o subtitle : Subt\u00edtulo da apresenta\u00e7\u00e3o author : - Geraldo Ribeiro - Outro Nome de Autor # subject: Informa\u00e7\u00e3o da propriedade Assunto do PDF # keywords: [palavra-chave1, palavra-chave2, palavra-chave3, PDF] # slide-level: 2 # usa o t\u00edtulo de segundo n\u00edvel para iniciar um slide # aspectratio: 169 # Formato 16:9 # links-as-notes: true # natbib: true # bibliography: refs.bib # theme: STR header-includes : - \\usepackage{tikz}","title":"Plugin beamer"},{"location":"plugin_beamer/#exemplo-de-uso-do-plugin-beamer","text":"steps : - name : Criar apresenta\u00e7\u00e3o PDF a partir de arquivos Markdown plugin : name : beamer output : nome_da_minha_apresentacao.pdf source : # Lista de arquivos markdown na sequ\u00eancia em que ser\u00e3o utilizados - 00-intro.md - 01-outro.md - 02-mais-um.md - 99-referencias.md lang : pt-BR # en-US institute : Nome da institui\u00e7\u00e3o date : 01 de Abril de 2023 title : T\u00edtulo da apresenta\u00e7\u00e3o subtitle : Subt\u00edtulo da apresenta\u00e7\u00e3o author : - Geraldo Ribeiro - Outro Nome de Autor # subject: Informa\u00e7\u00e3o da propriedade Assunto do PDF # keywords: [palavra-chave1, palavra-chave2, palavra-chave3, PDF] # slide-level: 2 # usa o t\u00edtulo de segundo n\u00edvel para iniciar um slide # aspectratio: 169 # Formato 16:9 # links-as-notes: true # natbib: true # bibliography: refs.bib # theme: STR header-includes : - \\usepackage{tikz}","title":"Exemplo de uso do plugin beamer"},{"location":"plugin_clang-format/","text":"Exemplo de uso do plugin clang-format steps : - name : \"Formatar c\u00f3digo C++ com clang-format\" description : \"Padroniza formato do c\u00f3digo usando regras\" run_as : user plugin : name : \"clang-format\" source : # Lista arquivos a serem formatados - \"src/*.cpp\" - \"test/*.cpp\" - \"include/*.hpp\"","title":"Plugin clang format"},{"location":"plugin_clang-format/#exemplo-de-uso-do-plugin-clang-format","text":"steps : - name : \"Formatar c\u00f3digo C++ com clang-format\" description : \"Padroniza formato do c\u00f3digo usando regras\" run_as : user plugin : name : \"clang-format\" source : # Lista arquivos a serem formatados - \"src/*.cpp\" - \"test/*.cpp\" - \"include/*.hpp\"","title":"Exemplo de uso do plugin clang-format"},{"location":"plugin_clang-format_config/","text":"Exemplo de configura\u00e7\u00e3o para o clang-format --- BasedOnStyle : Google TabWidth : '2' UseTab : Never ColumnLimit : 120 ...","title":"Plugin clang format config"},{"location":"plugin_clang-format_config/#exemplo-de-configuracao-para-o-clang-format","text":"--- BasedOnStyle : Google TabWidth : '2' UseTab : Never ColumnLimit : 120 ...","title":"Exemplo de configura\u00e7\u00e3o para o clang-format"},{"location":"plugin_clang-tidy/","text":"Exemplo de uso do plugin clang-tidy steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - clang-tidy\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"clang-tidy\" options : - \"-std=c++11\" include : - \"/usr/include/\" source : - \"src/*.cpp\" - \"test/*.cpp\"","title":"Plugin clang tidy"},{"location":"plugin_clang-tidy/#exemplo-de-uso-do-plugin-clang-tidy","text":"steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - clang-tidy\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"clang-tidy\" options : - \"-std=c++11\" include : - \"/usr/include/\" source : - \"src/*.cpp\" - \"test/*.cpp\"","title":"Exemplo de uso do plugin clang-tidy"},{"location":"plugin_cppcheck/","text":"Exemplo de uso do plugin cppcheck steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - cppcheck\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"cppcheck\" options : - \"-j 2\" # executa 2 jobs simult\u00e2neamente # - \"--clang=clang-11\" # utiliza o clang como analisador # - \"--bug-hunting\" # \u00fatil para code review include : - \"include\" source : - \"src\" - \"test\" platform : \"unix64\"","title":"Plugin cppcheck"},{"location":"plugin_cppcheck/#exemplo-de-uso-do-plugin-cppcheck","text":"steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - cppcheck\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"cppcheck\" options : - \"-j 2\" # executa 2 jobs simult\u00e2neamente # - \"--clang=clang-11\" # utiliza o clang como analisador # - \"--bug-hunting\" # \u00fatil para code review include : - \"include\" source : - \"src\" - \"test\" platform : \"unix64\"","title":"Exemplo de uso do plugin cppcheck"},{"location":"plugin_fetch/","text":"Exemplo de uso do plugin fetch --- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ strip-components : 2 # remove 2 n\u00edveis files : - path1/path2/lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Plugin fetch"},{"location":"plugin_fetch/#exemplo-de-uso-do-plugin-fetch","text":"--- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ strip-components : 2 # remove 2 n\u00edveis files : - path1/path2/lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Exemplo de uso do plugin fetch"},{"location":"plugin_fetch2/","text":"Exemplo de uso do plugin fetch (2) --- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" copy_to : \"/home/bitnami/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Plugin fetch2"},{"location":"plugin_fetch2/#exemplo-de-uso-do-plugin-fetch-2","text":"--- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" copy_to : \"/home/bitnami/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Exemplo de uso do plugin fetch (2)"},{"location":"plugin_git_deploy/","text":"Exemplo de uso do plugin git_deploy --- steps : - name : \"Deploy de p\u00e1gina de aplica\u00e7\u00e3o VueJS\" description : \"Descri\u00e7\u00e3o do passo\" plugin : name : \"git_deploy\" # Reposit\u00f3rio contendo a \u00faltima vers\u00e3o da aplica\u00e7\u00e3o repo : \"git@gitlab.xyx.com.br:str/app_frontend_deploy.git\" # Local no servidor onde ficar\u00e1 o reposit\u00f3rio git local git_dir : \"/opt/microCI/repos/app_frontend_deploy\" # Local no servidor onde ser\u00e1 feito o deploy dos arquivos work_tree : \"/var/www/my-intranet/html/app\" clean : true","title":"Plugin git deploy"},{"location":"plugin_git_deploy/#exemplo-de-uso-do-plugin-git_deploy","text":"--- steps : - name : \"Deploy de p\u00e1gina de aplica\u00e7\u00e3o VueJS\" description : \"Descri\u00e7\u00e3o do passo\" plugin : name : \"git_deploy\" # Reposit\u00f3rio contendo a \u00faltima vers\u00e3o da aplica\u00e7\u00e3o repo : \"git@gitlab.xyx.com.br:str/app_frontend_deploy.git\" # Local no servidor onde ficar\u00e1 o reposit\u00f3rio git local git_dir : \"/opt/microCI/repos/app_frontend_deploy\" # Local no servidor onde ser\u00e1 feito o deploy dos arquivos work_tree : \"/var/www/my-intranet/html/app\" clean : true","title":"Exemplo de uso do plugin git_deploy"},{"location":"plugin_git_publish/","text":"Exemplo de uso do plugin git_publish --- steps : - name : \"Publicar em outro reposit\u00f3rio git\" description : \"Descri\u00e7\u00e3o deste passo\" # network: bridge # (default) # run_as: root # run_as: user # (default) ssh : copy_from : \"${HOME}/.ssh\" # copy_to: \"/root/.ssh\" # root # copy_to: \"/tmp/microci_deploy\" # user (default) plugin : name : \"git_publish\" git_url : \"git@seuservidor.com.br:awesome_deploy.git\" copy_to : \"/tmp/deploy\" # Pasta padr\u00e3o dentro do container copy_from : \"site\" # Pasta padr\u00e3o que cont\u00eam os arquivos clean_before : true # Remove todos os arquivos antes de copiar o novos","title":"Plugin git publish"},{"location":"plugin_git_publish/#exemplo-de-uso-do-plugin-git_publish","text":"--- steps : - name : \"Publicar em outro reposit\u00f3rio git\" description : \"Descri\u00e7\u00e3o deste passo\" # network: bridge # (default) # run_as: root # run_as: user # (default) ssh : copy_from : \"${HOME}/.ssh\" # copy_to: \"/root/.ssh\" # root # copy_to: \"/tmp/microci_deploy\" # user (default) plugin : name : \"git_publish\" git_url : \"git@seuservidor.com.br:awesome_deploy.git\" copy_to : \"/tmp/deploy\" # Pasta padr\u00e3o dentro do container copy_from : \"site\" # Pasta padr\u00e3o que cont\u00eam os arquivos clean_before : true # Remove todos os arquivos antes de copiar o novos","title":"Exemplo de uso do plugin git_publish"},{"location":"plugin_minio/","text":"Exemplo de uso do plugin minio Veja documenta\u00e7\u00e3o do MinIO Client em https://github.com/minio/mc . steps : - name : \"Salvar artefato em bucket\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : minio bash : | # Lista arquivos do bucket mc ls microci/nome_do_bucket # Copia arquivos do workspace para o bucket mc cp Makefile microci/nome_do_bucket/ # Copia arquivos do bucket para o workspace mc cp microci/nome_do_bucket/imagem.png .","title":"Plugin minio"},{"location":"plugin_minio/#exemplo-de-uso-do-plugin-minio","text":"Veja documenta\u00e7\u00e3o do MinIO Client em https://github.com/minio/mc . steps : - name : \"Salvar artefato em bucket\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : minio bash : | # Lista arquivos do bucket mc ls microci/nome_do_bucket # Copia arquivos do workspace para o bucket mc cp Makefile microci/nome_do_bucket/ # Copia arquivos do bucket para o workspace mc cp microci/nome_do_bucket/imagem.png .","title":"Exemplo de uso do plugin minio"},{"location":"plugin_mkdocs_material/","text":"Exemplo de uso do plugin mkdocs_material --- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Para construir a documenta\u00e7\u00e3o em outra pasta use # action: \"build --site-dir nome_da_pasta - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"ssh://git@someurl.com/site.git\" copy_to : \"/deploy\" # Par\u00e2metro default copy_from : \"site\" # Par\u00e2metro default clean_before : true # Par\u00e2metro default - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" only : \"serve\" # passo executado localmente para auxiliar na edi\u00e7\u00e3o/preview network : host plugin : name : \"mkdocs_material\" action : \"serve\" port : 8000","title":"Plugin mkdocs material"},{"location":"plugin_mkdocs_material/#exemplo-de-uso-do-plugin-mkdocs_material","text":"--- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Para construir a documenta\u00e7\u00e3o em outra pasta use # action: \"build --site-dir nome_da_pasta - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"ssh://git@someurl.com/site.git\" copy_to : \"/deploy\" # Par\u00e2metro default copy_from : \"site\" # Par\u00e2metro default clean_before : true # Par\u00e2metro default - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" only : \"serve\" # passo executado localmente para auxiliar na edi\u00e7\u00e3o/preview network : host plugin : name : \"mkdocs_material\" action : \"serve\" port : 8000","title":"Exemplo de uso do plugin mkdocs_material"},{"location":"plugin_mkdocs_material_config/","text":"Exemplo de configura\u00e7\u00e3o do plugin mkdocs_material site_name : Nome do site repo_url : https://github.com/geraldolsribeiro/microCI repo_name : geraldolsribeiro/microCI edit_uri : edit/master/docs/ theme : name : material language : pt logo : assets/logo.svg favicon : assets/favicon.png palette : primary : white icon : repo : fontawesome/brands/github features : - navigation.instant extra : homepage : http://url-final-do-projeto/ extra_css : - css/print.css markdown_extensions : - admonition - pymdownx.superfences : custom_fences : - name : mermaid class : mermaid format : !!python/name:pymdownx.superfences.fence_code_format - pymdownx.tasklist : custom_checkbox : true - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.mark - pymdownx.snippets plugins : - search : lang : pt - mermaid2 - i18n : default_language : pt languages : en : name : English build : true site_name : microCI documentation pt : name : Portugu\u00eas build : true site_name : Documenta\u00e7\u00e3o do microCI","title":"Plugin mkdocs material config"},{"location":"plugin_mkdocs_material_config/#exemplo-de-configuracao-do-plugin-mkdocs_material","text":"site_name : Nome do site repo_url : https://github.com/geraldolsribeiro/microCI repo_name : geraldolsribeiro/microCI edit_uri : edit/master/docs/ theme : name : material language : pt logo : assets/logo.svg favicon : assets/favicon.png palette : primary : white icon : repo : fontawesome/brands/github features : - navigation.instant extra : homepage : http://url-final-do-projeto/ extra_css : - css/print.css markdown_extensions : - admonition - pymdownx.superfences : custom_fences : - name : mermaid class : mermaid format : !!python/name:pymdownx.superfences.fence_code_format - pymdownx.tasklist : custom_checkbox : true - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.mark - pymdownx.snippets plugins : - search : lang : pt - mermaid2 - i18n : default_language : pt languages : en : name : English build : true site_name : microCI documentation pt : name : Portugu\u00eas build : true site_name : Documenta\u00e7\u00e3o do microCI","title":"Exemplo de configura\u00e7\u00e3o do plugin mkdocs_material"},{"location":"plugin_npm/","text":"Exemplo de uso do plugin bash para projeto node docker : \"node:16\" steps : - name : \"Instalar depend\u00eancias\" description : \"Descri\u00e7\u00e3o do passo\" bash : | npm install - name : \"Verificar o c\u00f3digo\" bash : | npm run lint --fix - name : \"Construir\" bash : | npm run build","title":"Plugin npm"},{"location":"plugin_npm/#exemplo-de-uso-do-plugin-bash-para-projeto-node","text":"docker : \"node:16\" steps : - name : \"Instalar depend\u00eancias\" description : \"Descri\u00e7\u00e3o do passo\" bash : | npm install - name : \"Verificar o c\u00f3digo\" bash : | npm run lint --fix - name : \"Construir\" bash : | npm run build","title":"Exemplo de uso do plugin bash para projeto node"},{"location":"plugin_plantuml/","text":"Exemplo de uso do plugin plantuml steps : - name : \"Gerar diagramas plantuml\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : \"plantuml\" source : - \"src/**.cpp\" # Vasculha recursivamente os arquivos cpp - \"docs/**.puml\" type : svg # svg, png ou pdf output : \"/microci_workspace/docs/diagrams/\" # Pasta onde ser\u00e3o salvos os arquivos","title":"Plugin plantuml"},{"location":"plugin_plantuml/#exemplo-de-uso-do-plugin-plantuml","text":"steps : - name : \"Gerar diagramas plantuml\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : \"plantuml\" source : - \"src/**.cpp\" # Vasculha recursivamente os arquivos cpp - \"docs/**.puml\" type : svg # svg, png ou pdf output : \"/microci_workspace/docs/diagrams/\" # Pasta onde ser\u00e3o salvos os arquivos","title":"Exemplo de uso do plugin plantuml"},{"location":"plugin_skip/","text":"Exemplo de uso do plugin skip steps : - name : \"Passo ignorado\" description : \"Este passo est\u00e1 desativado\" plugin : name : skip - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" docker : \"gcc:11\" network : bridge run_as : root plugin : name : skip # Este passo n\u00e3o ser\u00e1 executado bash : | apt update apt upgrade -y apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Ajusta o dono do arquivo do root para o usu\u00e1rio atual chown $(id -u).$(id -g) -Rv src/microCI","title":"Plugin skip"},{"location":"plugin_skip/#exemplo-de-uso-do-plugin-skip","text":"steps : - name : \"Passo ignorado\" description : \"Este passo est\u00e1 desativado\" plugin : name : skip - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" docker : \"gcc:11\" network : bridge run_as : root plugin : name : skip # Este passo n\u00e3o ser\u00e1 executado bash : | apt update apt upgrade -y apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Ajusta o dono do arquivo do root para o usu\u00e1rio atual chown $(id -u).$(id -g) -Rv src/microCI","title":"Exemplo de uso do plugin skip"},{"location":"tutorial/tutorial_mkdocs_material_local/","text":"Tutorial mkdocs local Introdu\u00e7\u00e3o O objetivo deste tutorial \u00e9 a execu\u00e7\u00e3o do microCI localmente para criar documenta\u00e7\u00e3o. A ferramenta mkdocs-material oferece uma maneira pr\u00e1tica para documentar o projeto usando arquivos no formato markdown. Neste tutorial veremos como criar um projeto mkdocs e gerar uma documenta\u00e7\u00e3o usando o microCI . Configura\u00e7\u00e3o do microCI O microCI cria um arquivo de configura\u00e7\u00e3o inicial para executar o mkdocs-material : microCI --new mkdocs_material Um arquivo chamado .microCI.yml foi criado no diret\u00f3rio atual: --- steps : # Remova este passo ap\u00f3s a primeira execu\u00e7\u00e3o - name : \"Criar arquivos iniciais do mkdocs\" plugin : name : \"mkdocs_material\" action : \"new .\" - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Contruindo para uma pasta personalizada # action: \"build --site-dir public - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" # passo executado localmente only : \"local-step\" plugin : name : \"mkdocs_material\" action : \"serve\" # Porta personalizada, caso j\u00e1 esteja utilizando a padr\u00e3o 8000 # port: 9001 Cada chave name inicia um novo passo. No arquivo criado existem 3 passos: Criar arquivos iniciais do mkdocs Construir documenta\u00e7\u00e3o em formato HTML Servidor local na porta 8000 Passos com a chave only n\u00e3o s\u00e3o executados por padr\u00e3o. Primeira execu\u00e7\u00e3o Edite o arquivo .microCI.yml para ajustar a configura\u00e7\u00e3o se necess\u00e1rio e execute: microCI | bash Se a gera\u00e7\u00e3o foi bem sucedida o nome dos passos seguidos de OK s\u00e3o exibidos no terminal: Criar arquivos iniciais do mkdocs...............: OK Construir documenta\u00e7\u00e3o em formato HTML..........: OK Remova o primeiro passo (Criar arquivos iniciais do mkdocs) e execute o comando novamente: microCI | bash Passos adicionais A configura\u00e7\u00e3o contem um passo que pode ser executado sozinho para subir um servidor para previsualizar a documenta\u00e7\u00e3o. microCI --only local-step | bash","title":"Tutorial mkdocs local"},{"location":"tutorial/tutorial_mkdocs_material_local/#tutorial-mkdocs-local","text":"","title":"Tutorial mkdocs local"},{"location":"tutorial/tutorial_mkdocs_material_local/#introducao","text":"O objetivo deste tutorial \u00e9 a execu\u00e7\u00e3o do microCI localmente para criar documenta\u00e7\u00e3o. A ferramenta mkdocs-material oferece uma maneira pr\u00e1tica para documentar o projeto usando arquivos no formato markdown. Neste tutorial veremos como criar um projeto mkdocs e gerar uma documenta\u00e7\u00e3o usando o microCI .","title":"Introdu\u00e7\u00e3o"},{"location":"tutorial/tutorial_mkdocs_material_local/#configuracao-do-microci","text":"O microCI cria um arquivo de configura\u00e7\u00e3o inicial para executar o mkdocs-material : microCI --new mkdocs_material Um arquivo chamado .microCI.yml foi criado no diret\u00f3rio atual: --- steps : # Remova este passo ap\u00f3s a primeira execu\u00e7\u00e3o - name : \"Criar arquivos iniciais do mkdocs\" plugin : name : \"mkdocs_material\" action : \"new .\" - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Contruindo para uma pasta personalizada # action: \"build --site-dir public - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" # passo executado localmente only : \"local-step\" plugin : name : \"mkdocs_material\" action : \"serve\" # Porta personalizada, caso j\u00e1 esteja utilizando a padr\u00e3o 8000 # port: 9001 Cada chave name inicia um novo passo. No arquivo criado existem 3 passos: Criar arquivos iniciais do mkdocs Construir documenta\u00e7\u00e3o em formato HTML Servidor local na porta 8000 Passos com a chave only n\u00e3o s\u00e3o executados por padr\u00e3o.","title":"Configura\u00e7\u00e3o do microCI"},{"location":"tutorial/tutorial_mkdocs_material_local/#primeira-execucao","text":"Edite o arquivo .microCI.yml para ajustar a configura\u00e7\u00e3o se necess\u00e1rio e execute: microCI | bash Se a gera\u00e7\u00e3o foi bem sucedida o nome dos passos seguidos de OK s\u00e3o exibidos no terminal: Criar arquivos iniciais do mkdocs...............: OK Construir documenta\u00e7\u00e3o em formato HTML..........: OK Remova o primeiro passo (Criar arquivos iniciais do mkdocs) e execute o comando novamente: microCI | bash","title":"Primeira execu\u00e7\u00e3o"},{"location":"tutorial/tutorial_mkdocs_material_local/#passos-adicionais","text":"A configura\u00e7\u00e3o contem um passo que pode ser executado sozinho para subir um servidor para previsualizar a documenta\u00e7\u00e3o. microCI --only local-step | bash","title":"Passos adicionais"},{"location":"tutorial/tutorial_mkdocs_material_servidor/","text":"Tutorial mkdocs servidor Introdu\u00e7\u00e3o Depois de executar o microCI localmente no tutorial anterrior, podemos come\u00e7ar a automa\u00e7\u00e3o da pipeline atrav\u00e9s de webhooks e execu\u00e7\u00e3o remota. Neste tutorial ser\u00e1 mostrado como, a partir de um commit no reposit\u00f3rio de trabalho, \u00e9 gerada a vers\u00e3o final e disponibiliza\u00e7\u00e3o em produ\u00e7\u00e3o. A execu\u00e7\u00e3o se dar\u00e1 conforme a figura abaixo: Evento inicial: O desenvolvedor atualiza a documenta\u00e7\u00e3o realiza um commit e envia para o servidor git. Passo 1: O servidor git recebe o evento de push com os commits do usu\u00e1rio e dispara um webhook vinculado ao reposit\u00f3rio. Nota: o evento de push ocorre uma \u00fanica vez mesmo que este contenha v\u00e1rios commits . Passo 2: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. Nota: o servidor de webhook utilizado neste exemplo pode ser obtido em https://github.com/adnanh/webhook . Abaixo est\u00e3o a declara\u00e7\u00e3o dois webhooks usados neste tutorial: # Disparado no passo 2 - id : \"microCI_awesome\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome/\" # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: todos os webhooks executam o mesmo script Passo 3: Uma implementa\u00e7\u00e3o m\u00ednima do script de adapta\u00e7\u00e3o do webhook para o microCI pode ser vista a seguir: #!/bin/bash # Arquivo microCI.sh # Acrescente suas personaliza\u00e7\u00f5es aqui if [ -d \".git\" ] ; then git pull fi # Este comando \u00e9 executado no caminho do reposit\u00f3rio microCI | bash Nota: O procedimento \u00e9 id\u00eantico ao executado localmente: o microCI l\u00ea a configura\u00e7\u00e3o do arquivo .microCI.yml e executa os passos descritos. # Arquivo .microCI.yml do reposit\u00f3rio awesome --- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"git@nome_do_servidor.com.br:awesome_deploy.git\" copy_to : \"/deploy\" copy_from : \"site\" clean_before : true O plugin mkdocs_material com a a\u00e7\u00e3o build l\u00ea os arquivos markdown e constroi a documenta\u00e7\u00e3o em formato HTML e a salva na pasta site para ser utilizada no pr\u00f3ximo passo. O plugin git_publish clona o reposit\u00f3rio apontado por git_url na pasta /deploy , ent\u00e3o copia o conte\u00fado da pasta site para a pasta /deploy , dentro do container, e faz o commit para atualizando o repost\u00f3rio. Passo 4 : O reposit\u00f3rio awesome_deploy recebe o post lan\u00e7ado pelo plugin git_publish no passo anterior e dispara outro webhook. Passo 5: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: executa o procedimento igual ao do passo 2, mas desta vez na pasta do reposit\u00f3rio awesome_deploy . Passo 6: O microCI executa o plugin git_deploy que realiza o checkout do reposit\u00f3rio na pasta de implanta\u00e7\u00e3o. Para garantir que o hist\u00f3rico com os commits antigos n\u00e3o estar\u00e3o dispon\u00edveis em produ\u00e7\u00e3o o checkout \u00e9 realizado de forma dividida, ficando o hist\u00f3rico ( .git ) em uma pasta privada e somente os arquivos do \u00faltimo commit no caminho de deploy especificado. Passo 7: A pasta de deploy atualizada no passo anterior est\u00e1 dispon\u00edvel em produ\u00e7\u00e3o.","title":"Tutorial mkdocs servidor"},{"location":"tutorial/tutorial_mkdocs_material_servidor/#tutorial-mkdocs-servidor","text":"","title":"Tutorial mkdocs servidor"},{"location":"tutorial/tutorial_mkdocs_material_servidor/#introducao","text":"Depois de executar o microCI localmente no tutorial anterrior, podemos come\u00e7ar a automa\u00e7\u00e3o da pipeline atrav\u00e9s de webhooks e execu\u00e7\u00e3o remota. Neste tutorial ser\u00e1 mostrado como, a partir de um commit no reposit\u00f3rio de trabalho, \u00e9 gerada a vers\u00e3o final e disponibiliza\u00e7\u00e3o em produ\u00e7\u00e3o. A execu\u00e7\u00e3o se dar\u00e1 conforme a figura abaixo: Evento inicial: O desenvolvedor atualiza a documenta\u00e7\u00e3o realiza um commit e envia para o servidor git. Passo 1: O servidor git recebe o evento de push com os commits do usu\u00e1rio e dispara um webhook vinculado ao reposit\u00f3rio. Nota: o evento de push ocorre uma \u00fanica vez mesmo que este contenha v\u00e1rios commits . Passo 2: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. Nota: o servidor de webhook utilizado neste exemplo pode ser obtido em https://github.com/adnanh/webhook . Abaixo est\u00e3o a declara\u00e7\u00e3o dois webhooks usados neste tutorial: # Disparado no passo 2 - id : \"microCI_awesome\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome/\" # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: todos os webhooks executam o mesmo script Passo 3: Uma implementa\u00e7\u00e3o m\u00ednima do script de adapta\u00e7\u00e3o do webhook para o microCI pode ser vista a seguir: #!/bin/bash # Arquivo microCI.sh # Acrescente suas personaliza\u00e7\u00f5es aqui if [ -d \".git\" ] ; then git pull fi # Este comando \u00e9 executado no caminho do reposit\u00f3rio microCI | bash Nota: O procedimento \u00e9 id\u00eantico ao executado localmente: o microCI l\u00ea a configura\u00e7\u00e3o do arquivo .microCI.yml e executa os passos descritos. # Arquivo .microCI.yml do reposit\u00f3rio awesome --- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"git@nome_do_servidor.com.br:awesome_deploy.git\" copy_to : \"/deploy\" copy_from : \"site\" clean_before : true O plugin mkdocs_material com a a\u00e7\u00e3o build l\u00ea os arquivos markdown e constroi a documenta\u00e7\u00e3o em formato HTML e a salva na pasta site para ser utilizada no pr\u00f3ximo passo. O plugin git_publish clona o reposit\u00f3rio apontado por git_url na pasta /deploy , ent\u00e3o copia o conte\u00fado da pasta site para a pasta /deploy , dentro do container, e faz o commit para atualizando o repost\u00f3rio. Passo 4 : O reposit\u00f3rio awesome_deploy recebe o post lan\u00e7ado pelo plugin git_publish no passo anterior e dispara outro webhook. Passo 5: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: executa o procedimento igual ao do passo 2, mas desta vez na pasta do reposit\u00f3rio awesome_deploy . Passo 6: O microCI executa o plugin git_deploy que realiza o checkout do reposit\u00f3rio na pasta de implanta\u00e7\u00e3o. Para garantir que o hist\u00f3rico com os commits antigos n\u00e3o estar\u00e3o dispon\u00edveis em produ\u00e7\u00e3o o checkout \u00e9 realizado de forma dividida, ficando o hist\u00f3rico ( .git ) em uma pasta privada e somente os arquivos do \u00faltimo commit no caminho de deploy especificado. Passo 7: A pasta de deploy atualizada no passo anterior est\u00e1 dispon\u00edvel em produ\u00e7\u00e3o.","title":"Introdu\u00e7\u00e3o"},{"location":"en/","text":"Welcome to microCI The full documentation can be found at microci.dev . to be translated... O microCI \u00e9 uma ferramenta para auxiliar a constru\u00e7\u00e3o de pipelines de integra\u00e7\u00e3o cont\u00ednua. O principal diferencial do microCI \u00e9 a gera\u00e7\u00e3o de scripts port\u00e1veis e totalmente audit\u00e1veis para execu\u00e7\u00e3o de tarefas em containers docker . Como todos os passos s\u00e3o executados em um ou mais containers docker, todo o processo se torna reprodut\u00edvel em: a) qualquer m\u00e1quina do time de desenvolvimento, b) no servidor que realizar\u00e1 o build autom\u00e1tico ap\u00f3s os commits, c) no servidor que realizar\u00e1 o deploy para produ\u00e7\u00e3o... Enfim a mesma ferramenta, sem depend\u00eancia, pode ser usada tanto na m\u00e1quina do dev quanto no servidor. No desktop A utiliza\u00e7\u00e3o do microCI no desktop do dev \u00e9 muito simples: microCI | bash No comando acima o microCI leu um arquivo .microCI.yml contendo a descri\u00e7\u00e3o dos passos da pipeline e gerou um script para execu\u00e7\u00e3o destes passos. Este script \u00e9 escrito na sa\u00edda padr\u00e3o e pode ser encadeado com outras ferramentas ou passado para um interpretador bash para a execu\u00e7\u00e3o. Um arquivo chamado .microCI.log \u00e9 gerado com todas as mensagens, warning, erros de todos os comandos executados e pode ser analisado para resolver algum problema que possa ocorrer. No servidor Para execu\u00e7\u00e3o no servidor basta expor webhooks que, ao serem acionados, executam microCI nas respectivas pastas do projeto. Requisitos m\u00ednimos Um ambiente docker corretamente configurado Bash Instala\u00e7\u00e3o A instala\u00e7\u00e3o \u00e9 igualmente simples, bastando copiar o execut\u00e1vel para uma pasta que esteja no PATH . Para remover o microCI completamente do sistema basta apagar o arquivo copiado para o PATH. curl -L https://github.com/geraldolsribeiro/microCI/releases/download/v0.16.0/microCI \\ -o /usr/local/bin/microCI chmod 755 /usr/local/bin/microCI Container docker Voc\u00ea pode utilizar qualquer container docker para execu\u00e7\u00e3o, tanto os p\u00fablicos do Docker HUB quanto os que voc\u00ea desenvolver internamente. Integra\u00e7\u00e3o com github, gitlab, ... O modo mais simples e seguro de utilizar o microCI para ler ou escrever nos reposit\u00f3rios \u00e9 realizar o acesso atrav\u00e9s de chave SSH. Por fazer Abaixo est\u00e3o algumas funcionalidades que poder\u00e3o estar presente nos pr\u00f3ximos releases. criar pacote deb criar pacote rpm passar usu\u00e1rio atual para container para evitar gera\u00e7\u00e3o de arquivos como root na pasta de trabalho exibir mensagem de erro do passo que falhou substitui\u00e7\u00e3o de vari\u00e1veis nos steps uso de vari\u00e1veis de ambiente e segredos configurados no servidor criar imagem docker a partir de reposit\u00f3rio git Vers\u00f5es 0.16.0 Refatora\u00e7\u00e3o dos plugins 0.15.2 Plugin fetch 0.14.1 Plugin beamer 0.13.0 Configura\u00e7\u00e3o de rede docker 0.12.0 Plugin clang-format e junit2html 0.11.1 Notifica\u00e7\u00e3o em canal do discord 0.10.1 M\u00faltiplos arquivos de modelo 0.9.0 Plugin plantuml 0.8.0 Plugin clang-tidy 0.7.0 Plugin cppcheck 0.6.1 Plugin git_publish 0.5.0 Montagem de volumes; C\u00f3pia de chave SSH 0.4.0 Constru\u00e7\u00e3o do microCI pelo microCI 0.3.0 Cria arquivos de configura\u00e7\u00e3o 0.2.0 Plugin mkdocs 0.1.0 Passo em bash e plugin git_deploy 0.0.1 Vers\u00e3o inicial para prova de conceito Licen\u00e7a MIT License Copyright (c) 2022 Geraldo Luis da Silva Ribeiro \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2588\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Welcome to microCI"},{"location":"en/#welcome-to-microci","text":"The full documentation can be found at microci.dev . to be translated... O microCI \u00e9 uma ferramenta para auxiliar a constru\u00e7\u00e3o de pipelines de integra\u00e7\u00e3o cont\u00ednua. O principal diferencial do microCI \u00e9 a gera\u00e7\u00e3o de scripts port\u00e1veis e totalmente audit\u00e1veis para execu\u00e7\u00e3o de tarefas em containers docker . Como todos os passos s\u00e3o executados em um ou mais containers docker, todo o processo se torna reprodut\u00edvel em: a) qualquer m\u00e1quina do time de desenvolvimento, b) no servidor que realizar\u00e1 o build autom\u00e1tico ap\u00f3s os commits, c) no servidor que realizar\u00e1 o deploy para produ\u00e7\u00e3o... Enfim a mesma ferramenta, sem depend\u00eancia, pode ser usada tanto na m\u00e1quina do dev quanto no servidor.","title":"Welcome to microCI"},{"location":"en/#no-desktop","text":"A utiliza\u00e7\u00e3o do microCI no desktop do dev \u00e9 muito simples: microCI | bash No comando acima o microCI leu um arquivo .microCI.yml contendo a descri\u00e7\u00e3o dos passos da pipeline e gerou um script para execu\u00e7\u00e3o destes passos. Este script \u00e9 escrito na sa\u00edda padr\u00e3o e pode ser encadeado com outras ferramentas ou passado para um interpretador bash para a execu\u00e7\u00e3o. Um arquivo chamado .microCI.log \u00e9 gerado com todas as mensagens, warning, erros de todos os comandos executados e pode ser analisado para resolver algum problema que possa ocorrer.","title":"No desktop"},{"location":"en/#no-servidor","text":"Para execu\u00e7\u00e3o no servidor basta expor webhooks que, ao serem acionados, executam microCI nas respectivas pastas do projeto.","title":"No servidor"},{"location":"en/#requisitos-minimos","text":"Um ambiente docker corretamente configurado Bash","title":"Requisitos m\u00ednimos"},{"location":"en/#instalacao","text":"A instala\u00e7\u00e3o \u00e9 igualmente simples, bastando copiar o execut\u00e1vel para uma pasta que esteja no PATH . Para remover o microCI completamente do sistema basta apagar o arquivo copiado para o PATH. curl -L https://github.com/geraldolsribeiro/microCI/releases/download/v0.16.0/microCI \\ -o /usr/local/bin/microCI chmod 755 /usr/local/bin/microCI","title":"Instala\u00e7\u00e3o"},{"location":"en/#container-docker","text":"Voc\u00ea pode utilizar qualquer container docker para execu\u00e7\u00e3o, tanto os p\u00fablicos do Docker HUB quanto os que voc\u00ea desenvolver internamente.","title":"Container docker"},{"location":"en/#integracao-com-github-gitlab","text":"O modo mais simples e seguro de utilizar o microCI para ler ou escrever nos reposit\u00f3rios \u00e9 realizar o acesso atrav\u00e9s de chave SSH.","title":"Integra\u00e7\u00e3o com github, gitlab, ..."},{"location":"en/#por-fazer","text":"Abaixo est\u00e3o algumas funcionalidades que poder\u00e3o estar presente nos pr\u00f3ximos releases. criar pacote deb criar pacote rpm passar usu\u00e1rio atual para container para evitar gera\u00e7\u00e3o de arquivos como root na pasta de trabalho exibir mensagem de erro do passo que falhou substitui\u00e7\u00e3o de vari\u00e1veis nos steps uso de vari\u00e1veis de ambiente e segredos configurados no servidor criar imagem docker a partir de reposit\u00f3rio git","title":"Por fazer"},{"location":"en/#versoes","text":"0.16.0 Refatora\u00e7\u00e3o dos plugins 0.15.2 Plugin fetch 0.14.1 Plugin beamer 0.13.0 Configura\u00e7\u00e3o de rede docker 0.12.0 Plugin clang-format e junit2html 0.11.1 Notifica\u00e7\u00e3o em canal do discord 0.10.1 M\u00faltiplos arquivos de modelo 0.9.0 Plugin plantuml 0.8.0 Plugin clang-tidy 0.7.0 Plugin cppcheck 0.6.1 Plugin git_publish 0.5.0 Montagem de volumes; C\u00f3pia de chave SSH 0.4.0 Constru\u00e7\u00e3o do microCI pelo microCI 0.3.0 Cria arquivos de configura\u00e7\u00e3o 0.2.0 Plugin mkdocs 0.1.0 Passo em bash e plugin git_deploy 0.0.1 Vers\u00e3o inicial para prova de conceito","title":"Vers\u00f5es"},{"location":"en/#licenca","text":"MIT License Copyright (c) 2022 Geraldo Luis da Silva Ribeiro \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2588\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2591\u2588\u2591\u2588\u2591\u2591\u2591\u2591\u2588\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2588\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2580\u2580\u2580\u2591\u2591\u2591 \u2591\u2591\u2591\u2580\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 \u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591\u2591 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"Licen\u00e7a"},{"location":"en/intmain_docmd/","text":"Fonte: dockerfiles/intmain_docmd Introdu\u00e7\u00e3o Ferramenta para gera\u00e7\u00e3o de documenta\u00e7\u00e3o em formato markdown. Uso intmain_docmd tipo arquivo_fonte arquivo_markdown onde tipo pode ser: bash c++ coffee conf grdb makefile nginx python ruby scss systemd vim yaml Se nenhum argumento for fornecido o programa imprime a ajuda e finaliza a execu\u00e7\u00e3o. Detalhes if ARGV . empty? puts \"\"\" Gerador de documenta\u00e7\u00e3o em formato Markdown intmain_docmd tipo arquivo_fonte arquivo_markdown tipo: vim, bash, python, ruby, coffee, makefile, grdb, nginx, scss, conf, c++, systemd, yaml Para alterar o comportamento da ferramenta utilize as seguintes vari\u00e1veis de ambiente: INTMAIN_DOCMD_DETAILS=false desabilita a tag details INTMAIN_DOCMD_TOC=false desabilita a gera\u00e7\u00e3o de sum\u00e1rio INTMAIN_DOCMD_SHOW_SOURCE=false desabilita a identifica\u00e7\u00e3o do arquivo fonte \"\"\" exit end Exemplo real A documenta\u00e7\u00e3o deste projeto \u00e9 mantida utilizando-se o intmain_docmd : intmain_docmd ruby bin/intmain_docmd doc/10_Gerador_de_documenta\u00e7\u00e3o_intmain_docmd.md intmain_docmd bash bin/intmain_resize_screenshots doc/20_Redimensionador_de_screenshots.md intmain_docmd bash scripts/Common/intmain.bash doc/20_Biblioteca_de_scripts_intmain.md intmain_docmd bash scripts/Common/taoker.bash doc/21_Biblioteca_de_scripts_taoker.md intmain_docmd bash scripts/Common/common.bash doc/30_Biblioteca_de_fun\u00e7\u00f5es_bash.md intmain_docmd makefile scripts/Common/Makefile.include doc/40_Biblioteca_de_alvos_make.md Vari\u00e1veis de controle INTMAIN_DOCMD_DETAILS : ativa/desativa o encapsulamento dos trecho de c\u00f3digo INTMAIN_DOCMD_TOC : ativa/desativa a gera\u00e7\u00e3o do \u00edndice INTMAIN_DOCMD_SHOW_SOURCE : exibe o nome do arquivo de origem Detalhes use_detail = ( ENV [ 'INTMAIN_DOCMD_DETAILS' ] || 'true' ) . match ( /(true|t|yes|y)/i ) use_toc = ( ENV [ 'INTMAIN_DOCMD_TOC' ] || 'true' ) . match ( /(true|t|yes|y)/i ) show_source = ( ENV [ 'INTMAIN_DOCMD_SHOW_SOURCE' ] || 'true' ) . match ( /(true|t|yes|y)/i ) Callout numbers Para referenciar comandos use itens numerados, p. e. \u2776, para indicar uma linha no meio do c\u00f3digo. Detalhes def expand_shortcuts ( text ) callout_numbers = { \"\u2776\" => \"\u2776\" , \"\u2777\" => \"\u2777\" , \"\u2778\" => \"\u2778\" , \"\u2779\" => \"\u2779\" , \"\u277a\" => \"\u277a\" , \"\u277b\" => \"\u277b\" , \"\u277c\" => \"\u277c\" , \"\u277d\" => \"\u277d\" , \"\u277e\" => \"\u277e\" , \"\u277f\" => \"\u277f\" , \"\u24eb\" => \"\u24eb\" , \"\u24ec\" => \"\u24ec\" , \"\u24ed\" => \"\u24ed\" , \"\u24ee\" => \"\u24ee\" , \"\u24ef\" => \"\u24ef\" , \"\u24f0\" => \"\u24f0\" , \"\u24f1\" => \"\u24f1\" , \"\u24f2\" => \"\u24f2\" , \"\u24f3\" => \"\u24f3\" , \"\u24f4\" => \"\u24f4\" } callout_numbers . each { | k , v | text = text . gsub ( k , v ) } text end Inclus\u00e3o de diagramas com plantuml Os trechos em plantuml a seguir ser\u00e3o substitu\u00eddos pela imagem do diagrama.","title":"Intmain docmd"},{"location":"en/intmain_docmd/#introducao","text":"Ferramenta para gera\u00e7\u00e3o de documenta\u00e7\u00e3o em formato markdown.","title":"Introdu\u00e7\u00e3o"},{"location":"en/intmain_docmd/#uso","text":"intmain_docmd tipo arquivo_fonte arquivo_markdown onde tipo pode ser: bash c++ coffee conf grdb makefile nginx python ruby scss systemd vim yaml Se nenhum argumento for fornecido o programa imprime a ajuda e finaliza a execu\u00e7\u00e3o. Detalhes if ARGV . empty? puts \"\"\" Gerador de documenta\u00e7\u00e3o em formato Markdown intmain_docmd tipo arquivo_fonte arquivo_markdown tipo: vim, bash, python, ruby, coffee, makefile, grdb, nginx, scss, conf, c++, systemd, yaml Para alterar o comportamento da ferramenta utilize as seguintes vari\u00e1veis de ambiente: INTMAIN_DOCMD_DETAILS=false desabilita a tag details INTMAIN_DOCMD_TOC=false desabilita a gera\u00e7\u00e3o de sum\u00e1rio INTMAIN_DOCMD_SHOW_SOURCE=false desabilita a identifica\u00e7\u00e3o do arquivo fonte \"\"\" exit end","title":"Uso"},{"location":"en/intmain_docmd/#exemplo-real","text":"A documenta\u00e7\u00e3o deste projeto \u00e9 mantida utilizando-se o intmain_docmd : intmain_docmd ruby bin/intmain_docmd doc/10_Gerador_de_documenta\u00e7\u00e3o_intmain_docmd.md intmain_docmd bash bin/intmain_resize_screenshots doc/20_Redimensionador_de_screenshots.md intmain_docmd bash scripts/Common/intmain.bash doc/20_Biblioteca_de_scripts_intmain.md intmain_docmd bash scripts/Common/taoker.bash doc/21_Biblioteca_de_scripts_taoker.md intmain_docmd bash scripts/Common/common.bash doc/30_Biblioteca_de_fun\u00e7\u00f5es_bash.md intmain_docmd makefile scripts/Common/Makefile.include doc/40_Biblioteca_de_alvos_make.md","title":"Exemplo real"},{"location":"en/intmain_docmd/#variaveis-de-controle","text":"INTMAIN_DOCMD_DETAILS : ativa/desativa o encapsulamento dos trecho de c\u00f3digo INTMAIN_DOCMD_TOC : ativa/desativa a gera\u00e7\u00e3o do \u00edndice INTMAIN_DOCMD_SHOW_SOURCE : exibe o nome do arquivo de origem Detalhes use_detail = ( ENV [ 'INTMAIN_DOCMD_DETAILS' ] || 'true' ) . match ( /(true|t|yes|y)/i ) use_toc = ( ENV [ 'INTMAIN_DOCMD_TOC' ] || 'true' ) . match ( /(true|t|yes|y)/i ) show_source = ( ENV [ 'INTMAIN_DOCMD_SHOW_SOURCE' ] || 'true' ) . match ( /(true|t|yes|y)/i )","title":"Vari\u00e1veis de controle"},{"location":"en/intmain_docmd/#callout-numbers","text":"Para referenciar comandos use itens numerados, p. e. \u2776, para indicar uma linha no meio do c\u00f3digo. Detalhes def expand_shortcuts ( text ) callout_numbers = { \"\u2776\" => \"\u2776\" , \"\u2777\" => \"\u2777\" , \"\u2778\" => \"\u2778\" , \"\u2779\" => \"\u2779\" , \"\u277a\" => \"\u277a\" , \"\u277b\" => \"\u277b\" , \"\u277c\" => \"\u277c\" , \"\u277d\" => \"\u277d\" , \"\u277e\" => \"\u277e\" , \"\u277f\" => \"\u277f\" , \"\u24eb\" => \"\u24eb\" , \"\u24ec\" => \"\u24ec\" , \"\u24ed\" => \"\u24ed\" , \"\u24ee\" => \"\u24ee\" , \"\u24ef\" => \"\u24ef\" , \"\u24f0\" => \"\u24f0\" , \"\u24f1\" => \"\u24f1\" , \"\u24f2\" => \"\u24f2\" , \"\u24f3\" => \"\u24f3\" , \"\u24f4\" => \"\u24f4\" } callout_numbers . each { | k , v | text = text . gsub ( k , v ) } text end","title":"Callout numbers"},{"location":"en/intmain_docmd/#inclusao-de-diagramas-com-plantuml","text":"Os trechos em plantuml a seguir ser\u00e3o substitu\u00eddos pela imagem do diagrama.","title":"Inclus\u00e3o de diagramas com plantuml"},{"location":"en/plugin_bash/","text":"Exemplo de uso do plugin bash steps : - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" description : \"Descri\u00e7\u00e3o deste passo\" docker : \"gcc:11\" # Imagem que ser\u00e1 executada network : bridge # bridge, host ou none run_as : root # root, user plugin : name : bash bash : | # Coment\u00e1rios s\u00e3o permitidos entre os comando apt update apt upgrade -y # Estes pacotes s\u00e3o instalados na imagem apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Torna o usu\u00e1rio atual como dono do arquivo gerado chown $(id -u).$(id -g) -Rv src/microCI","title":"Plugin bash"},{"location":"en/plugin_bash/#exemplo-de-uso-do-plugin-bash","text":"steps : - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" description : \"Descri\u00e7\u00e3o deste passo\" docker : \"gcc:11\" # Imagem que ser\u00e1 executada network : bridge # bridge, host ou none run_as : root # root, user plugin : name : bash bash : | # Coment\u00e1rios s\u00e3o permitidos entre os comando apt update apt upgrade -y # Estes pacotes s\u00e3o instalados na imagem apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Torna o usu\u00e1rio atual como dono do arquivo gerado chown $(id -u).$(id -g) -Rv src/microCI","title":"Exemplo de uso do plugin bash"},{"location":"en/plugin_beamer/","text":"Exemplo de uso do plugin beamer steps : - name : Criar apresenta\u00e7\u00e3o PDF a partir de arquivos Markdown plugin : name : beamer output : nome_da_minha_apresentacao.pdf source : # Lista de arquivos markdown na sequ\u00eancia em que ser\u00e3o utilizados - 00-intro.md - 01-outro.md - 02-mais-um.md - 99-referencias.md lang : pt-BR # en-US institute : Nome da institui\u00e7\u00e3o date : 01 de Abril de 2023 title : T\u00edtulo da apresenta\u00e7\u00e3o subtitle : Subt\u00edtulo da apresenta\u00e7\u00e3o author : - Geraldo Ribeiro - Outro Nome de Autor # subject: Informa\u00e7\u00e3o da propriedade Assunto do PDF # keywords: [palavra-chave1, palavra-chave2, palavra-chave3, PDF] # slide-level: 2 # usa o t\u00edtulo de segundo n\u00edvel para iniciar um slide # aspectratio: 169 # Formato 16:9 # links-as-notes: true # natbib: true # bibliography: refs.bib # theme: STR header-includes : - \\usepackage{tikz}","title":"Plugin beamer"},{"location":"en/plugin_beamer/#exemplo-de-uso-do-plugin-beamer","text":"steps : - name : Criar apresenta\u00e7\u00e3o PDF a partir de arquivos Markdown plugin : name : beamer output : nome_da_minha_apresentacao.pdf source : # Lista de arquivos markdown na sequ\u00eancia em que ser\u00e3o utilizados - 00-intro.md - 01-outro.md - 02-mais-um.md - 99-referencias.md lang : pt-BR # en-US institute : Nome da institui\u00e7\u00e3o date : 01 de Abril de 2023 title : T\u00edtulo da apresenta\u00e7\u00e3o subtitle : Subt\u00edtulo da apresenta\u00e7\u00e3o author : - Geraldo Ribeiro - Outro Nome de Autor # subject: Informa\u00e7\u00e3o da propriedade Assunto do PDF # keywords: [palavra-chave1, palavra-chave2, palavra-chave3, PDF] # slide-level: 2 # usa o t\u00edtulo de segundo n\u00edvel para iniciar um slide # aspectratio: 169 # Formato 16:9 # links-as-notes: true # natbib: true # bibliography: refs.bib # theme: STR header-includes : - \\usepackage{tikz}","title":"Exemplo de uso do plugin beamer"},{"location":"en/plugin_clang-format/","text":"Exemplo de uso do plugin clang-format steps : - name : \"Formatar c\u00f3digo C++ com clang-format\" description : \"Padroniza formato do c\u00f3digo usando regras\" run_as : user plugin : name : \"clang-format\" source : # Lista arquivos a serem formatados - \"src/*.cpp\" - \"test/*.cpp\" - \"include/*.hpp\"","title":"Plugin clang format"},{"location":"en/plugin_clang-format/#exemplo-de-uso-do-plugin-clang-format","text":"steps : - name : \"Formatar c\u00f3digo C++ com clang-format\" description : \"Padroniza formato do c\u00f3digo usando regras\" run_as : user plugin : name : \"clang-format\" source : # Lista arquivos a serem formatados - \"src/*.cpp\" - \"test/*.cpp\" - \"include/*.hpp\"","title":"Exemplo de uso do plugin clang-format"},{"location":"en/plugin_clang-format_config/","text":"Exemplo de configura\u00e7\u00e3o para o clang-format --- BasedOnStyle : Google TabWidth : '2' UseTab : Never ColumnLimit : 120 ...","title":"Plugin clang format config"},{"location":"en/plugin_clang-format_config/#exemplo-de-configuracao-para-o-clang-format","text":"--- BasedOnStyle : Google TabWidth : '2' UseTab : Never ColumnLimit : 120 ...","title":"Exemplo de configura\u00e7\u00e3o para o clang-format"},{"location":"en/plugin_clang-tidy/","text":"Exemplo de uso do plugin clang-tidy steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - clang-tidy\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"clang-tidy\" options : - \"-std=c++11\" include : - \"/usr/include/\" source : - \"src/*.cpp\" - \"test/*.cpp\"","title":"Plugin clang tidy"},{"location":"en/plugin_clang-tidy/#exemplo-de-uso-do-plugin-clang-tidy","text":"steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - clang-tidy\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"clang-tidy\" options : - \"-std=c++11\" include : - \"/usr/include/\" source : - \"src/*.cpp\" - \"test/*.cpp\"","title":"Exemplo de uso do plugin clang-tidy"},{"location":"en/plugin_cppcheck/","text":"Exemplo de uso do plugin cppcheck steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - cppcheck\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"cppcheck\" options : - \"-j 2\" # executa 2 jobs simult\u00e2neamente # - \"--clang=clang-11\" # utiliza o clang como analisador # - \"--bug-hunting\" # \u00fatil para code review include : - \"include\" source : - \"src\" - \"test\" platform : \"unix64\"","title":"Plugin cppcheck"},{"location":"en/plugin_cppcheck/#exemplo-de-uso-do-plugin-cppcheck","text":"steps : - name : \"Gerar relat\u00f3rio de verifica\u00e7\u00e3o do c\u00f3digo C++ - cppcheck\" description : \"Verifica o c\u00f3digo C++ e gera relat\u00f3rio em formato HTML\" plugin : name : \"cppcheck\" options : - \"-j 2\" # executa 2 jobs simult\u00e2neamente # - \"--clang=clang-11\" # utiliza o clang como analisador # - \"--bug-hunting\" # \u00fatil para code review include : - \"include\" source : - \"src\" - \"test\" platform : \"unix64\"","title":"Exemplo de uso do plugin cppcheck"},{"location":"en/plugin_fetch/","text":"Exemplo de uso do plugin fetch --- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ strip-components : 2 # remove 2 n\u00edveis files : - path1/path2/lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Plugin fetch"},{"location":"en/plugin_fetch/#exemplo-de-uso-do-plugin-fetch","text":"--- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ strip-components : 2 # remove 2 n\u00edveis files : - path1/path2/lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Exemplo de uso do plugin fetch"},{"location":"en/plugin_fetch2/","text":"Exemplo de uso do plugin fetch (2) --- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" copy_to : \"/home/bitnami/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Plugin fetch2"},{"location":"en/plugin_fetch2/#exemplo-de-uso-do-plugin-fetch-2","text":"--- steps : - name : \"Baixar arquivos externos ao projeto\" description : \"Download de depend\u00eancias utilizadas na compila\u00e7\u00e3o\" ssh : # usado pelo git_archive copy_from : \"${HOME}/.ssh\" copy_to : \"/home/bitnami/.ssh\" plugin : name : \"fetch\" target : include # local padr\u00e3o para os arquivos items : - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/include/ files : - README.md - include/*.h - git_archive : git@gitlabcorp.xyz.com.br:group/repo.git target : /tmp/lib/ files : - lib/*.so - url : https://raw.githubusercontent.com/adishavit/argh/master/argh.h target : /tmp/include # Local onde ser\u00e1 colocado este arquivo - url : https://raw.githubusercontent.com/nlohmann/json/develop/single_include/nlohmann/json.hpp - url : https://raw.githubusercontent.com/pantor/inja/master/single_include/inja/inja.hpp","title":"Exemplo de uso do plugin fetch (2)"},{"location":"en/plugin_git_deploy/","text":"Exemplo de uso do plugin git_deploy --- steps : - name : \"Deploy de p\u00e1gina de aplica\u00e7\u00e3o VueJS\" description : \"Descri\u00e7\u00e3o do passo\" plugin : name : \"git_deploy\" # Reposit\u00f3rio contendo a \u00faltima vers\u00e3o da aplica\u00e7\u00e3o repo : \"git@gitlab.xyx.com.br:str/app_frontend_deploy.git\" # Local no servidor onde ficar\u00e1 o reposit\u00f3rio git local git_dir : \"/opt/microCI/repos/app_frontend_deploy\" # Local no servidor onde ser\u00e1 feito o deploy dos arquivos work_tree : \"/var/www/my-intranet/html/app\" clean : true","title":"Plugin git deploy"},{"location":"en/plugin_git_deploy/#exemplo-de-uso-do-plugin-git_deploy","text":"--- steps : - name : \"Deploy de p\u00e1gina de aplica\u00e7\u00e3o VueJS\" description : \"Descri\u00e7\u00e3o do passo\" plugin : name : \"git_deploy\" # Reposit\u00f3rio contendo a \u00faltima vers\u00e3o da aplica\u00e7\u00e3o repo : \"git@gitlab.xyx.com.br:str/app_frontend_deploy.git\" # Local no servidor onde ficar\u00e1 o reposit\u00f3rio git local git_dir : \"/opt/microCI/repos/app_frontend_deploy\" # Local no servidor onde ser\u00e1 feito o deploy dos arquivos work_tree : \"/var/www/my-intranet/html/app\" clean : true","title":"Exemplo de uso do plugin git_deploy"},{"location":"en/plugin_git_publish/","text":"Exemplo de uso do plugin git_publish --- steps : - name : \"Publicar em outro reposit\u00f3rio git\" description : \"Descri\u00e7\u00e3o deste passo\" # network: bridge # (default) # run_as: root # run_as: user # (default) ssh : copy_from : \"${HOME}/.ssh\" # copy_to: \"/root/.ssh\" # root # copy_to: \"/tmp/microci_deploy\" # user (default) plugin : name : \"git_publish\" git_url : \"git@seuservidor.com.br:awesome_deploy.git\" copy_to : \"/tmp/deploy\" # Pasta padr\u00e3o dentro do container copy_from : \"site\" # Pasta padr\u00e3o que cont\u00eam os arquivos clean_before : true # Remove todos os arquivos antes de copiar o novos","title":"Plugin git publish"},{"location":"en/plugin_git_publish/#exemplo-de-uso-do-plugin-git_publish","text":"--- steps : - name : \"Publicar em outro reposit\u00f3rio git\" description : \"Descri\u00e7\u00e3o deste passo\" # network: bridge # (default) # run_as: root # run_as: user # (default) ssh : copy_from : \"${HOME}/.ssh\" # copy_to: \"/root/.ssh\" # root # copy_to: \"/tmp/microci_deploy\" # user (default) plugin : name : \"git_publish\" git_url : \"git@seuservidor.com.br:awesome_deploy.git\" copy_to : \"/tmp/deploy\" # Pasta padr\u00e3o dentro do container copy_from : \"site\" # Pasta padr\u00e3o que cont\u00eam os arquivos clean_before : true # Remove todos os arquivos antes de copiar o novos","title":"Exemplo de uso do plugin git_publish"},{"location":"en/plugin_minio/","text":"Exemplo de uso do plugin minio Veja documenta\u00e7\u00e3o do MinIO Client em https://github.com/minio/mc . steps : - name : \"Salvar artefato em bucket\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : minio bash : | # Lista arquivos do bucket mc ls microci/nome_do_bucket # Copia arquivos do workspace para o bucket mc cp Makefile microci/nome_do_bucket/ # Copia arquivos do bucket para o workspace mc cp microci/nome_do_bucket/imagem.png .","title":"Plugin minio"},{"location":"en/plugin_minio/#exemplo-de-uso-do-plugin-minio","text":"Veja documenta\u00e7\u00e3o do MinIO Client em https://github.com/minio/mc . steps : - name : \"Salvar artefato em bucket\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : minio bash : | # Lista arquivos do bucket mc ls microci/nome_do_bucket # Copia arquivos do workspace para o bucket mc cp Makefile microci/nome_do_bucket/ # Copia arquivos do bucket para o workspace mc cp microci/nome_do_bucket/imagem.png .","title":"Exemplo de uso do plugin minio"},{"location":"en/plugin_mkdocs_material/","text":"Exemplo de uso do plugin mkdocs_material --- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Para construir a documenta\u00e7\u00e3o em outra pasta use # action: \"build --site-dir nome_da_pasta - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"ssh://git@someurl.com/site.git\" copy_to : \"/deploy\" # Par\u00e2metro default copy_from : \"site\" # Par\u00e2metro default clean_before : true # Par\u00e2metro default - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" only : \"serve\" # passo executado localmente para auxiliar na edi\u00e7\u00e3o/preview network : host plugin : name : \"mkdocs_material\" action : \"serve\" port : 8000","title":"Plugin mkdocs material"},{"location":"en/plugin_mkdocs_material/#exemplo-de-uso-do-plugin-mkdocs_material","text":"--- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Para construir a documenta\u00e7\u00e3o em outra pasta use # action: \"build --site-dir nome_da_pasta - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"ssh://git@someurl.com/site.git\" copy_to : \"/deploy\" # Par\u00e2metro default copy_from : \"site\" # Par\u00e2metro default clean_before : true # Par\u00e2metro default - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" only : \"serve\" # passo executado localmente para auxiliar na edi\u00e7\u00e3o/preview network : host plugin : name : \"mkdocs_material\" action : \"serve\" port : 8000","title":"Exemplo de uso do plugin mkdocs_material"},{"location":"en/plugin_mkdocs_material_config/","text":"Exemplo de configura\u00e7\u00e3o do plugin mkdocs_material site_name : Nome do site repo_url : https://github.com/geraldolsribeiro/microCI repo_name : geraldolsribeiro/microCI edit_uri : edit/master/docs/ theme : name : material language : pt logo : assets/logo.svg favicon : assets/favicon.png palette : primary : white icon : repo : fontawesome/brands/github features : - navigation.instant extra : homepage : http://url-final-do-projeto/ extra_css : - css/print.css markdown_extensions : - admonition - pymdownx.superfences : custom_fences : - name : mermaid class : mermaid format : !!python/name:pymdownx.superfences.fence_code_format - pymdownx.tasklist : custom_checkbox : true - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.mark - pymdownx.snippets plugins : - search : lang : pt - mermaid2 - i18n : default_language : pt languages : en : name : English build : true site_name : microCI documentation pt : name : Portugu\u00eas build : true site_name : Documenta\u00e7\u00e3o do microCI","title":"Plugin mkdocs material config"},{"location":"en/plugin_mkdocs_material_config/#exemplo-de-configuracao-do-plugin-mkdocs_material","text":"site_name : Nome do site repo_url : https://github.com/geraldolsribeiro/microCI repo_name : geraldolsribeiro/microCI edit_uri : edit/master/docs/ theme : name : material language : pt logo : assets/logo.svg favicon : assets/favicon.png palette : primary : white icon : repo : fontawesome/brands/github features : - navigation.instant extra : homepage : http://url-final-do-projeto/ extra_css : - css/print.css markdown_extensions : - admonition - pymdownx.superfences : custom_fences : - name : mermaid class : mermaid format : !!python/name:pymdownx.superfences.fence_code_format - pymdownx.tasklist : custom_checkbox : true - pymdownx.emoji : emoji_index : !!python/name:materialx.emoji.twemoji emoji_generator : !!python/name:materialx.emoji.to_svg - pymdownx.highlight : anchor_linenums : true - pymdownx.inlinehilite - pymdownx.mark - pymdownx.snippets plugins : - search : lang : pt - mermaid2 - i18n : default_language : pt languages : en : name : English build : true site_name : microCI documentation pt : name : Portugu\u00eas build : true site_name : Documenta\u00e7\u00e3o do microCI","title":"Exemplo de configura\u00e7\u00e3o do plugin mkdocs_material"},{"location":"en/plugin_npm/","text":"Exemplo de uso do plugin bash para projeto node docker : \"node:16\" steps : - name : \"Instalar depend\u00eancias\" description : \"Descri\u00e7\u00e3o do passo\" bash : | npm install - name : \"Verificar o c\u00f3digo\" bash : | npm run lint --fix - name : \"Construir\" bash : | npm run build","title":"Plugin npm"},{"location":"en/plugin_npm/#exemplo-de-uso-do-plugin-bash-para-projeto-node","text":"docker : \"node:16\" steps : - name : \"Instalar depend\u00eancias\" description : \"Descri\u00e7\u00e3o do passo\" bash : | npm install - name : \"Verificar o c\u00f3digo\" bash : | npm run lint --fix - name : \"Construir\" bash : | npm run build","title":"Exemplo de uso do plugin bash para projeto node"},{"location":"en/plugin_plantuml/","text":"Exemplo de uso do plugin plantuml steps : - name : \"Gerar diagramas plantuml\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : \"plantuml\" source : - \"src/**.cpp\" # Vasculha recursivamente os arquivos cpp - \"docs/**.puml\" type : svg # svg, png ou pdf output : \"/microci_workspace/docs/diagrams/\" # Pasta onde ser\u00e3o salvos os arquivos","title":"Plugin plantuml"},{"location":"en/plugin_plantuml/#exemplo-de-uso-do-plugin-plantuml","text":"steps : - name : \"Gerar diagramas plantuml\" description : \"Descri\u00e7\u00e3o deste passo\" plugin : name : \"plantuml\" source : - \"src/**.cpp\" # Vasculha recursivamente os arquivos cpp - \"docs/**.puml\" type : svg # svg, png ou pdf output : \"/microci_workspace/docs/diagrams/\" # Pasta onde ser\u00e3o salvos os arquivos","title":"Exemplo de uso do plugin plantuml"},{"location":"en/plugin_skip/","text":"Exemplo de uso do plugin skip steps : - name : \"Passo ignorado\" description : \"Este passo est\u00e1 desativado\" plugin : name : skip - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" docker : \"gcc:11\" network : bridge run_as : root plugin : name : skip # Este passo n\u00e3o ser\u00e1 executado bash : | apt update apt upgrade -y apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Ajusta o dono do arquivo do root para o usu\u00e1rio atual chown $(id -u).$(id -g) -Rv src/microCI","title":"Plugin skip"},{"location":"en/plugin_skip/#exemplo-de-uso-do-plugin-skip","text":"steps : - name : \"Passo ignorado\" description : \"Este passo est\u00e1 desativado\" plugin : name : skip - name : \"Compilar vers\u00e3o est\u00e1tica do microCI\" docker : \"gcc:11\" network : bridge run_as : root plugin : name : skip # Este passo n\u00e3o ser\u00e1 executado bash : | apt update apt upgrade -y apt install -y xxd libspdlog-dev libyaml-cpp-dev make -C src clean all make -C test # Ajusta o dono do arquivo do root para o usu\u00e1rio atual chown $(id -u).$(id -g) -Rv src/microCI","title":"Exemplo de uso do plugin skip"},{"location":"en/tutorial/tutorial_mkdocs_material_local/","text":"Tutorial mkdocs local Introdu\u00e7\u00e3o O objetivo deste tutorial \u00e9 a execu\u00e7\u00e3o do microCI localmente para criar documenta\u00e7\u00e3o. A ferramenta mkdocs-material oferece uma maneira pr\u00e1tica para documentar o projeto usando arquivos no formato markdown. Neste tutorial veremos como criar um projeto mkdocs e gerar uma documenta\u00e7\u00e3o usando o microCI . Configura\u00e7\u00e3o do microCI O microCI cria um arquivo de configura\u00e7\u00e3o inicial para executar o mkdocs-material : microCI --new mkdocs_material Um arquivo chamado .microCI.yml foi criado no diret\u00f3rio atual: --- steps : # Remova este passo ap\u00f3s a primeira execu\u00e7\u00e3o - name : \"Criar arquivos iniciais do mkdocs\" plugin : name : \"mkdocs_material\" action : \"new .\" - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Contruindo para uma pasta personalizada # action: \"build --site-dir public - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" # passo executado localmente only : \"local-step\" plugin : name : \"mkdocs_material\" action : \"serve\" # Porta personalizada, caso j\u00e1 esteja utilizando a padr\u00e3o 8000 # port: 9001 Cada chave name inicia um novo passo. No arquivo criado existem 3 passos: Criar arquivos iniciais do mkdocs Construir documenta\u00e7\u00e3o em formato HTML Servidor local na porta 8000 Passos com a chave only n\u00e3o s\u00e3o executados por padr\u00e3o. Primeira execu\u00e7\u00e3o Edite o arquivo .microCI.yml para ajustar a configura\u00e7\u00e3o se necess\u00e1rio e execute: microCI | bash Se a gera\u00e7\u00e3o foi bem sucedida o nome dos passos seguidos de OK s\u00e3o exibidos no terminal: Criar arquivos iniciais do mkdocs...............: OK Construir documenta\u00e7\u00e3o em formato HTML..........: OK Remova o primeiro passo (Criar arquivos iniciais do mkdocs) e execute o comando novamente: microCI | bash Passos adicionais A configura\u00e7\u00e3o contem um passo que pode ser executado sozinho para subir um servidor para previsualizar a documenta\u00e7\u00e3o. microCI --only local-step | bash","title":"Tutorial mkdocs local"},{"location":"en/tutorial/tutorial_mkdocs_material_local/#tutorial-mkdocs-local","text":"","title":"Tutorial mkdocs local"},{"location":"en/tutorial/tutorial_mkdocs_material_local/#introducao","text":"O objetivo deste tutorial \u00e9 a execu\u00e7\u00e3o do microCI localmente para criar documenta\u00e7\u00e3o. A ferramenta mkdocs-material oferece uma maneira pr\u00e1tica para documentar o projeto usando arquivos no formato markdown. Neste tutorial veremos como criar um projeto mkdocs e gerar uma documenta\u00e7\u00e3o usando o microCI .","title":"Introdu\u00e7\u00e3o"},{"location":"en/tutorial/tutorial_mkdocs_material_local/#configuracao-do-microci","text":"O microCI cria um arquivo de configura\u00e7\u00e3o inicial para executar o mkdocs-material : microCI --new mkdocs_material Um arquivo chamado .microCI.yml foi criado no diret\u00f3rio atual: --- steps : # Remova este passo ap\u00f3s a primeira execu\u00e7\u00e3o - name : \"Criar arquivos iniciais do mkdocs\" plugin : name : \"mkdocs_material\" action : \"new .\" - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" # Contruindo para uma pasta personalizada # action: \"build --site-dir public - name : \"Servidor local na porta 8000 (Ctrl+C para finalizar)\" description : \"Executa servidor local para preview da documenta\u00e7\u00e3o\" # passo executado localmente only : \"local-step\" plugin : name : \"mkdocs_material\" action : \"serve\" # Porta personalizada, caso j\u00e1 esteja utilizando a padr\u00e3o 8000 # port: 9001 Cada chave name inicia um novo passo. No arquivo criado existem 3 passos: Criar arquivos iniciais do mkdocs Construir documenta\u00e7\u00e3o em formato HTML Servidor local na porta 8000 Passos com a chave only n\u00e3o s\u00e3o executados por padr\u00e3o.","title":"Configura\u00e7\u00e3o do microCI"},{"location":"en/tutorial/tutorial_mkdocs_material_local/#primeira-execucao","text":"Edite o arquivo .microCI.yml para ajustar a configura\u00e7\u00e3o se necess\u00e1rio e execute: microCI | bash Se a gera\u00e7\u00e3o foi bem sucedida o nome dos passos seguidos de OK s\u00e3o exibidos no terminal: Criar arquivos iniciais do mkdocs...............: OK Construir documenta\u00e7\u00e3o em formato HTML..........: OK Remova o primeiro passo (Criar arquivos iniciais do mkdocs) e execute o comando novamente: microCI | bash","title":"Primeira execu\u00e7\u00e3o"},{"location":"en/tutorial/tutorial_mkdocs_material_local/#passos-adicionais","text":"A configura\u00e7\u00e3o contem um passo que pode ser executado sozinho para subir um servidor para previsualizar a documenta\u00e7\u00e3o. microCI --only local-step | bash","title":"Passos adicionais"},{"location":"en/tutorial/tutorial_mkdocs_material_servidor/","text":"Tutorial mkdocs servidor Introdu\u00e7\u00e3o Depois de executar o microCI localmente no tutorial anterrior, podemos come\u00e7ar a automa\u00e7\u00e3o da pipeline atrav\u00e9s de webhooks e execu\u00e7\u00e3o remota. Neste tutorial ser\u00e1 mostrado como, a partir de um commit no reposit\u00f3rio de trabalho, \u00e9 gerada a vers\u00e3o final e disponibiliza\u00e7\u00e3o em produ\u00e7\u00e3o. A execu\u00e7\u00e3o se dar\u00e1 conforme a figura abaixo: Evento inicial: O desenvolvedor atualiza a documenta\u00e7\u00e3o realiza um commit e envia para o servidor git. Passo 1: O servidor git recebe o evento de push com os commits do usu\u00e1rio e dispara um webhook vinculado ao reposit\u00f3rio. Nota: o evento de push ocorre uma \u00fanica vez mesmo que este contenha v\u00e1rios commits . Passo 2: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. Nota: o servidor de webhook utilizado neste exemplo pode ser obtido em https://github.com/adnanh/webhook . Abaixo est\u00e3o a declara\u00e7\u00e3o dois webhooks usados neste tutorial: # Disparado no passo 2 - id : \"microCI_awesome\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome/\" # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: todos os webhooks executam o mesmo script Passo 3: Uma implementa\u00e7\u00e3o m\u00ednima do script de adapta\u00e7\u00e3o do webhook para o microCI pode ser vista a seguir: #!/bin/bash # Arquivo microCI.sh # Acrescente suas personaliza\u00e7\u00f5es aqui if [ -d \".git\" ] ; then git pull fi # Este comando \u00e9 executado no caminho do reposit\u00f3rio microCI | bash Nota: O procedimento \u00e9 id\u00eantico ao executado localmente: o microCI l\u00ea a configura\u00e7\u00e3o do arquivo .microCI.yml e executa os passos descritos. # Arquivo .microCI.yml do reposit\u00f3rio awesome --- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"git@nome_do_servidor.com.br:awesome_deploy.git\" copy_to : \"/deploy\" copy_from : \"site\" clean_before : true O plugin mkdocs_material com a a\u00e7\u00e3o build l\u00ea os arquivos markdown e constroi a documenta\u00e7\u00e3o em formato HTML e a salva na pasta site para ser utilizada no pr\u00f3ximo passo. O plugin git_publish clona o reposit\u00f3rio apontado por git_url na pasta /deploy , ent\u00e3o copia o conte\u00fado da pasta site para a pasta /deploy , dentro do container, e faz o commit para atualizando o repost\u00f3rio. Passo 4 : O reposit\u00f3rio awesome_deploy recebe o post lan\u00e7ado pelo plugin git_publish no passo anterior e dispara outro webhook. Passo 5: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: executa o procedimento igual ao do passo 2, mas desta vez na pasta do reposit\u00f3rio awesome_deploy . Passo 6: O microCI executa o plugin git_deploy que realiza o checkout do reposit\u00f3rio na pasta de implanta\u00e7\u00e3o. Para garantir que o hist\u00f3rico com os commits antigos n\u00e3o estar\u00e3o dispon\u00edveis em produ\u00e7\u00e3o o checkout \u00e9 realizado de forma dividida, ficando o hist\u00f3rico ( .git ) em uma pasta privada e somente os arquivos do \u00faltimo commit no caminho de deploy especificado. Passo 7: A pasta de deploy atualizada no passo anterior est\u00e1 dispon\u00edvel em produ\u00e7\u00e3o.","title":"Tutorial mkdocs servidor"},{"location":"en/tutorial/tutorial_mkdocs_material_servidor/#tutorial-mkdocs-servidor","text":"","title":"Tutorial mkdocs servidor"},{"location":"en/tutorial/tutorial_mkdocs_material_servidor/#introducao","text":"Depois de executar o microCI localmente no tutorial anterrior, podemos come\u00e7ar a automa\u00e7\u00e3o da pipeline atrav\u00e9s de webhooks e execu\u00e7\u00e3o remota. Neste tutorial ser\u00e1 mostrado como, a partir de um commit no reposit\u00f3rio de trabalho, \u00e9 gerada a vers\u00e3o final e disponibiliza\u00e7\u00e3o em produ\u00e7\u00e3o. A execu\u00e7\u00e3o se dar\u00e1 conforme a figura abaixo: Evento inicial: O desenvolvedor atualiza a documenta\u00e7\u00e3o realiza um commit e envia para o servidor git. Passo 1: O servidor git recebe o evento de push com os commits do usu\u00e1rio e dispara um webhook vinculado ao reposit\u00f3rio. Nota: o evento de push ocorre uma \u00fanica vez mesmo que este contenha v\u00e1rios commits . Passo 2: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. Nota: o servidor de webhook utilizado neste exemplo pode ser obtido em https://github.com/adnanh/webhook . Abaixo est\u00e3o a declara\u00e7\u00e3o dois webhooks usados neste tutorial: # Disparado no passo 2 - id : \"microCI_awesome\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome/\" # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: todos os webhooks executam o mesmo script Passo 3: Uma implementa\u00e7\u00e3o m\u00ednima do script de adapta\u00e7\u00e3o do webhook para o microCI pode ser vista a seguir: #!/bin/bash # Arquivo microCI.sh # Acrescente suas personaliza\u00e7\u00f5es aqui if [ -d \".git\" ] ; then git pull fi # Este comando \u00e9 executado no caminho do reposit\u00f3rio microCI | bash Nota: O procedimento \u00e9 id\u00eantico ao executado localmente: o microCI l\u00ea a configura\u00e7\u00e3o do arquivo .microCI.yml e executa os passos descritos. # Arquivo .microCI.yml do reposit\u00f3rio awesome --- steps : - name : \"Construir documenta\u00e7\u00e3o em formato HTML\" description : \"Documenta\u00e7\u00e3o do projeto\" plugin : name : \"mkdocs_material\" action : \"build\" - name : \"Publicar HTML para reposit\u00f3rio git\" ssh : copy_from : \"${HOME}/.ssh\" copy_to : \"/root/.ssh\" plugin : name : \"git_publish\" git_url : \"git@nome_do_servidor.com.br:awesome_deploy.git\" copy_to : \"/deploy\" copy_from : \"site\" clean_before : true O plugin mkdocs_material com a a\u00e7\u00e3o build l\u00ea os arquivos markdown e constroi a documenta\u00e7\u00e3o em formato HTML e a salva na pasta site para ser utilizada no pr\u00f3ximo passo. O plugin git_publish clona o reposit\u00f3rio apontado por git_url na pasta /deploy , ent\u00e3o copia o conte\u00fado da pasta site para a pasta /deploy , dentro do container, e faz o commit para atualizando o repost\u00f3rio. Passo 4 : O reposit\u00f3rio awesome_deploy recebe o post lan\u00e7ado pelo plugin git_publish no passo anterior e dispara outro webhook. Passo 5: O servidor de webhook recebe as informa\u00e7\u00f5es do \u00faltimo commit e executa um script vinculado ao webhook. # Disparado no passo 5 - id : \"microCI_awesome_deploy\" execute-command : \"/usr/local/bin/microCI.sh\" command-working-directory : \"/opt/microCI/repos/awesome_deploy/\" Nota: executa o procedimento igual ao do passo 2, mas desta vez na pasta do reposit\u00f3rio awesome_deploy . Passo 6: O microCI executa o plugin git_deploy que realiza o checkout do reposit\u00f3rio na pasta de implanta\u00e7\u00e3o. Para garantir que o hist\u00f3rico com os commits antigos n\u00e3o estar\u00e3o dispon\u00edveis em produ\u00e7\u00e3o o checkout \u00e9 realizado de forma dividida, ficando o hist\u00f3rico ( .git ) em uma pasta privada e somente os arquivos do \u00faltimo commit no caminho de deploy especificado. Passo 7: A pasta de deploy atualizada no passo anterior est\u00e1 dispon\u00edvel em produ\u00e7\u00e3o.","title":"Introdu\u00e7\u00e3o"}]}